"use strict";(globalThis.webpackChunkcoo_llm_docs=globalThis.webpackChunkcoo_llm_docs||[]).push([[316],{3576:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>g,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var t=i(8168),r=(i(6540),i(5680));const a={sidebar_position:1,tags:["developer-guide","architecture"]},l="Architecture",o={unversionedId:"Intro/Architecture",id:"Intro/Architecture",title:"Architecture",description:"This document describes the high-level architecture of COO-LLM, including component interactions and design decisions.",source:"@site/docs/Intro/Architecture.md",sourceDirName:"Intro",slug:"/Intro/Architecture",permalink:"/docs/docs/Intro/Architecture",draft:!1,editUrl:"https://github.com/your-org/coo-llm/tree/main/docs/docs/docs/Intro/Architecture.md",tags:[{label:"developer-guide",permalink:"/docs/docs/tags/developer-guide"},{label:"architecture",permalink:"/docs/docs/tags/architecture"}],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,tags:["developer-guide","architecture"]},sidebar:"tutorialSidebar",previous:{title:"Providers",permalink:"/docs/docs/Guides/Providers"},next:{title:"API Reference",permalink:"/docs/docs/Reference/API"}},g={},s=[{value:"System Overview",id:"system-overview",level:2},{value:"Core Components",id:"core-components",level:2},{value:"API Layer (internal/api)",id:"api-layer-internalapi",level:3},{value:"Load Balancer Engine (internal/balancer)",id:"load-balancer-engine-internalbalancer",level:3},{value:"Provider Registry (internal/provider)",id:"provider-registry-internalprovider",level:3},{value:"Configuration System (internal/config)",id:"configuration-system-internalconfig",level:3},{value:"Storage System (internal/store)",id:"storage-system-internalstore",level:3},{value:"Logging System (internal/log)",id:"logging-system-internallog",level:3},{value:"Design Principles",id:"design-principles",level:2},{value:"Modularity",id:"modularity",level:3},{value:"Extensibility",id:"extensibility",level:3},{value:"Performance",id:"performance",level:3},{value:"Reliability",id:"reliability",level:3},{value:"Observability",id:"observability",level:3},{value:"Data Flow",id:"data-flow",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Security Considerations",id:"security-considerations",level:2}],p={toc:s},d="wrapper";function m({components:e,...n}){return(0,r.yg)(d,(0,t.A)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"architecture"},"Architecture"),(0,r.yg)("p",null,"This document describes the high-level architecture of COO-LLM, including component interactions and design decisions."),(0,r.yg)("h2",{id:"system-overview"},"System Overview"),(0,r.yg)("p",null,"COO-LLM follows a modular, plugin-based architecture designed for extensibility and maintainability. The system is built in Go and uses a layered architecture pattern."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"flowchart TD\n     A[Client Apps] --\x3e B[API Layer]\n     B --\x3e C[Load Balancer]\n     C --\x3e D[Providers]\n     D --\x3e E[LLM APIs]\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    Client Applications                      \u2502\n\u2502  (OpenAI SDK, LangChain, Custom Clients)                    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                       \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    API Layer (internal/api)                 \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502 OpenAI-Compatible Endpoints (/v1/*)                 \u2502    \u2502\n\u2502  \u2502 - POST /v1/chat/completions (with auth middleware)  \u2502    \u2502\n\u2502  \u2502 - GET /v1/models                                    \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502 Admin API (/admin/v1/*)                             \u2502    \u2502\n\u2502  \u2502 - Configuration management                          \u2502    \u2502\n\u2502  \u2502 - Provider status                                    \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                       \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                 Load Balancer (internal/balancer)           \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502 Selector (selector.go)                              \u2502    \u2502\n\u2502  \u2502 - Model alias resolution                            \u2502    \u2502\n\u2502  \u2502 - Provider/key selection algorithms                 \u2502    \u2502\n\u2502  \u2502 - Round Robin, Least Loaded, Hybrid scoring         \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502 Usage Tracking                                      \u2502    \u2502\n\u2502  \u2502 - Request counts, token usage, errors, latency     \u2502    \u2502\n\u2502  \u2502 - Rate limit checking                               \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                       \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                 Provider Registry (internal/provider)       \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502 Provider Interface (interface.go)                  \u2502    \u2502\n\u2502  \u2502 - Generate(ctx, req) method                         \u2502    \u2502\n\u2502  \u2502 - ListModels(ctx) method                            \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502 Provider Implementations                            \u2502    \u2502\n\u2502  \u2502 - OpenAI (openai.go)                                \u2502    \u2502\n\u2502  \u2502 - Gemini (gemini.go)                                \u2502    \u2502\n\u2502  \u2502 - Claude (claude.go)                                \u2502    \u2502\n\u2502  \u2502 - Custom (custom.go)                                \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502 Registry (registry.go)                              \u2502    \u2502\n\u2502  \u2502 - Load providers from config                        \u2502    \u2502\n\u2502  \u2502 - Provider registration and lookup                  \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                       \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                 Storage & Observability                      \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502 Runtime Storage (internal/store)                    \u2502    \u2502\n\u2502  \u2502 - Redis (production)                                \u2502    \u2502\n\u2502  \u2502 - Memory (development)                              \u2502    \u2502\n\u2502  \u2502 - HTTP API (remote)                                 \u2502    \u2502\n\u2502  \u2502 - File-based                                        \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502 Configuration (internal/config)                     \u2502    \u2502\n\u2502  \u2502 - YAML parsing with viper                           \u2502    \u2502\n\u2502  \u2502 - Environment variable substitution                 \u2502    \u2502\n\u2502  \u2502 - Validation and defaults                           \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502 Logging (internal/log)                              \u2502    \u2502\n\u2502  \u2502 - Structured JSON logging (Zerolog)                \u2502    \u2502\n\u2502  \u2502 - File output with rotation                         \u2502    \u2502\n\u2502  \u2502 - Prometheus metrics                                \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                       \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502              External LLM Providers                         \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502 OpenAI API (GPT-4, GPT-3.5)                         \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502 Google Gemini API (1.5 Pro, etc.)                  \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502 Anthropic Claude API (Opus, Sonnet)                \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502\n\u2502  \u2502 Custom LLM APIs                                     \u2502    \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.yg)("h2",{id:"core-components"},"Core Components"),(0,r.yg)("h3",{id:"api-layer-internalapi"},"API Layer (internal/api)"),(0,r.yg)("p",null,"The API layer provides OpenAI-compatible REST endpoints using Chi router. It handles:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Request validation and JSON parsing"),(0,r.yg)("li",{parentName:"ul"},"Authentication via API key middleware"),(0,r.yg)("li",{parentName:"ul"},"Model alias resolution and provider selection"),(0,r.yg)("li",{parentName:"ul"},"Response caching (optional)"),(0,r.yg)("li",{parentName:"ul"},"Retry logic with configurable attempts and timeouts"),(0,r.yg)("li",{parentName:"ul"},"Usage tracking and metrics collection")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Files:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/api/chat_completions.go")," - Main chat completions handler with retry logic"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/api/models.go")," - Models endpoint (not implemented yet)"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/api/admin.go")," - Admin endpoints (not implemented yet)")),(0,r.yg)("h3",{id:"load-balancer-engine-internalbalancer"},"Load Balancer Engine (internal/balancer)"),(0,r.yg)("p",null,"The core intelligence of COO-LLM implemented in ",(0,r.yg)("inlineCode",{parentName:"p"},"selector.go"),". Responsible for:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Model Resolution"),': Maps model aliases (e.g., "gpt-4o") to provider:model combinations'),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Provider Selection"),": Chooses optimal provider based on availability"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Key Selection"),": Implements three algorithms:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Round Robin: Simple cycling through keys"),(0,r.yg)("li",{parentName:"ul"},"Least Loaded: Selects key with lowest token usage"),(0,r.yg)("li",{parentName:"ul"},"Hybrid: Weighted scoring of req usage, token usage, errors, latency, cost"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Rate Limiting"),": Checks per-key limits for requests/minute and tokens/minute"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Usage Tracking"),": Updates metrics for requests, tokens, errors, latency")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Files:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/balancer/selector.go")," - Main selection logic and algorithms")),(0,r.yg)("h3",{id:"provider-registry-internalprovider"},"Provider Registry (internal/provider)"),(0,r.yg)("p",null,"Plugin system for LLM providers with clean interfaces:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Provider Interface"),": ",(0,r.yg)("inlineCode",{parentName:"li"},"LLMProvider")," with ",(0,r.yg)("inlineCode",{parentName:"li"},"Generate()")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"ListModels()")," methods"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Provider Types"),": OpenAI, Gemini, Claude, Custom"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Registry"),": Loads providers from config, manages provider instances"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Request/Response Types"),": Standardized ",(0,r.yg)("inlineCode",{parentName:"li"},"LLMRequest")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"LLMResponse")," structs")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Files:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/provider/interface.go")," - Core interfaces and types"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/provider/registry.go")," - Provider registration and loading"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/provider/openai.go")," - OpenAI API implementation"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/provider/gemini.go")," - Google Gemini implementation"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/provider/claude.go")," - Anthropic Claude implementation"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/provider/custom.go")," - Custom provider template")),(0,r.yg)("h3",{id:"configuration-system-internalconfig"},"Configuration System (internal/config)"),(0,r.yg)("p",null,"YAML-based configuration with viper integration:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Config Structure"),": ",(0,r.yg)("inlineCode",{parentName:"li"},"Config")," struct with sections for server, logging, storage, providers, etc."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"LLMProviders"),": New format replacing legacy providers (supports multiple API keys per provider)"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Model Aliases"),": Maps user-friendly names to provider:model pairs"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Policy Config"),": Load balancing algorithm and hybrid weights"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Validation"),": Ensures required fields and valid values")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Files:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/config/config.go")," - Main config structs and loading logic"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/config/config_test.go")," - Configuration tests")),(0,r.yg)("h3",{id:"storage-system-internalstore"},"Storage System (internal/store)"),(0,r.yg)("p",null,"Runtime storage for metrics and caching:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"RuntimeStore Interface"),": Methods for usage tracking, caching, sliding windows"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Backends"),": Redis (production), Memory (dev), HTTP (remote), File"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Usage Metrics"),": req, tokens, errors, latency per provider/key"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Caching"),": Optional response caching with TTL")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Files:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/store/interface.go")," - Storage interfaces"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/store/redis.go")," - Redis implementation"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/store/memory.go")," - In-memory storage"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/store/http.go")," - HTTP-based remote storage"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/store/file.go")," - File-based storage")),(0,r.yg)("h3",{id:"logging-system-internallog"},"Logging System (internal/log)"),(0,r.yg)("p",null,"Observability with structured logging:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Logger Interface"),": Request logging with context"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Backends"),": File with rotation, Prometheus metrics"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Log Entries"),": Provider, model, latency, tokens, status, errors"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Metrics"),": Prometheus integration for monitoring")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Files:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/log/logger.go")," - Main logging implementation"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"internal/log/logger_test.go")," - Logging tests")),(0,r.yg)("h2",{id:"design-principles"},"Design Principles"),(0,r.yg)("h3",{id:"modularity"},"Modularity"),(0,r.yg)("p",null,"Each component has clear interfaces and responsibilities. Components can be replaced or extended without affecting others."),(0,r.yg)("h3",{id:"extensibility"},"Extensibility"),(0,r.yg)("p",null,"Plugin-based architecture allows adding new providers, storage backends, and logging systems via interfaces."),(0,r.yg)("h3",{id:"performance"},"Performance"),(0,r.yg)("p",null,"Built with Go's concurrency model. Minimal overhead in request routing. Efficient data structures for metrics tracking."),(0,r.yg)("h3",{id:"reliability"},"Reliability"),(0,r.yg)("p",null,"Comprehensive error handling, retries, and fallback mechanisms. Health checks and monitoring."),(0,r.yg)("h3",{id:"observability"},"Observability"),(0,r.yg)("p",null,"Rich metrics, structured logging, and admin APIs for debugging and monitoring."),(0,r.yg)("h2",{id:"data-flow"},"Data Flow"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Request Reception"),": ",(0,r.yg)("inlineCode",{parentName:"li"},"chat_completions.go")," receives POST /v1/chat/completions"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Authentication"),": ",(0,r.yg)("inlineCode",{parentName:"li"},"AuthMiddleware")," validates Bearer token against ",(0,r.yg)("inlineCode",{parentName:"li"},"api_keys")," config"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Model Resolution"),": ",(0,r.yg)("inlineCode",{parentName:"li"},"GetProviderFromModel()")," maps model alias to provider ID using ",(0,r.yg)("inlineCode",{parentName:"li"},"model_aliases")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Provider Selection"),": ",(0,r.yg)("inlineCode",{parentName:"li"},"selector.SelectBest()")," resolves model to provider:model, selects provider"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Key Selection"),": ",(0,r.yg)("inlineCode",{parentName:"li"},"selector.selectKey()")," chooses optimal API key using configured algorithm:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Round Robin: Cycle through available keys"),(0,r.yg)("li",{parentName:"ul"},"Least Loaded: Select key with lowest token usage"),(0,r.yg)("li",{parentName:"ul"},"Hybrid: Calculate weighted score (req, token, error, latency, cost)"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Rate Limit Check"),": Verify key hasn't exceeded req/min or tokens/min limits"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Request Execution"),": Provider's ",(0,r.yg)("inlineCode",{parentName:"li"},"Generate()")," method makes external API call"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Retry Logic"),": On failure, retry up to ",(0,r.yg)("inlineCode",{parentName:"li"},"max_attempts")," with ",(0,r.yg)("inlineCode",{parentName:"li"},"interval")," delays"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Response Processing"),": Parse LLM response, extract token counts and finish reason"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Usage Tracking"),": Update storage with req, input_tokens, output_tokens, latency, errors"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Caching"),": Optionally cache response if enabled and prompt matches"),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Logging"),": Record request details via ",(0,r.yg)("inlineCode",{parentName:"li"},"logger.LogRequest()")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("strong",{parentName:"li"},"Response"),": Return OpenAI-formatted JSON response to client")),(0,r.yg)("h2",{id:"configuration"},"Configuration"),(0,r.yg)("p",null,"Configuration is centralized in YAML format with support for:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Environment variable substitution"),(0,r.yg)("li",{parentName:"ul"},"Hot-reload capabilities"),(0,r.yg)("li",{parentName:"ul"},"Validation and defaults"),(0,r.yg)("li",{parentName:"ul"},"Hierarchical overrides")),(0,r.yg)("p",null,"See ",(0,r.yg)("a",{parentName:"p",href:"/docs/docs/Guides/Configuration"},"Configuration")," for details."),(0,r.yg)("h2",{id:"security-considerations"},"Security Considerations"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"API key encryption at rest"),(0,r.yg)("li",{parentName:"ul"},"Request rate limiting"),(0,r.yg)("li",{parentName:"ul"},"Input validation and sanitization"),(0,r.yg)("li",{parentName:"ul"},"Secure communication with external providers"),(0,r.yg)("li",{parentName:"ul"},"Audit logging for compliance")))}m.isMDXComponent=!0},5680:(e,n,i)=>{i.d(n,{xA:()=>p,yg:()=>c});var t=i(6540);function r(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function a(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),i.push.apply(i,t)}return i}function l(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?a(Object(i),!0).forEach(function(n){r(e,n,i[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))})}return e}function o(e,n){if(null==e)return{};var i,t,r=function(e,n){if(null==e)return{};var i,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)i=a[t],n.indexOf(i)>=0||(r[i]=e[i]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)i=a[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var g=t.createContext({}),s=function(e){var n=t.useContext(g),i=n;return e&&(i="function"==typeof e?e(n):l(l({},n),e)),i},p=function(e){var n=s(e.components);return t.createElement(g.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef(function(e,n){var i=e.components,r=e.mdxType,a=e.originalType,g=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(i),y=r,c=d["".concat(g,".").concat(y)]||d[y]||m[y]||a;return i?t.createElement(c,l(l({ref:n},p),{},{components:i})):t.createElement(c,l({ref:n},p))});function c(e,n){var i=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=i.length,l=new Array(a);l[0]=y;var o={};for(var g in n)hasOwnProperty.call(n,g)&&(o[g]=n[g]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<a;s++)l[s]=i[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,i)}y.displayName="MDXCreateElement"}}]);