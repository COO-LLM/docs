"use strict";(globalThis.webpackChunkcoo_llm_docs=globalThis.webpackChunkcoo_llm_docs||[]).push([[25],{3795:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Guides/Deployment","title":"Deployment","description":"This guide covers deploying COO-LLM in various environments, from development to production.","source":"@site/content/Guides/Deployment.md","sourceDirName":"Guides","slug":"/Guides/Deployment","permalink":"/docs/docs/Guides/Deployment","draft":false,"unlisted":false,"editUrl":"https://github.com/coo-llm/coo-llm-main/tree/main/docs/content/content/Guides/Deployment.md","tags":[{"inline":true,"label":"user-guide","permalink":"/docs/docs/tags/user-guide"},{"inline":true,"label":"deployment","permalink":"/docs/docs/tags/deployment"}],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"tags":["user-guide","deployment"]},"sidebar":"tutorialSidebar","previous":{"title":"What\'s Next","permalink":"/docs/docs/Getting-Started/Whats-Next"},"next":{"title":"API-Usage","permalink":"/docs/docs/User-Guide/API-Usage"}}');var l=i(4848),o=i(8453);const r={sidebar_position:3,tags:["user-guide","deployment"]},c="Deployment",a={},d=[{value:"Deployment Options",id:"deployment-options",level:2},{value:"Docker Deployment",id:"docker-deployment",level:2},{value:"Basic Docker Run",id:"basic-docker-run",level:3},{value:"With Config File",id:"with-config-file",level:3},{value:"With Custom Web UI",id:"with-custom-web-ui",level:3},{value:"Docker Compose",id:"docker-compose",level:3},{value:"Docker Compose",id:"docker-compose-1",level:3},{value:"Production Deployment",id:"production-deployment",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Kubernetes",id:"kubernetes",level:3},{value:"AWS ECS",id:"aws-ecs",level:3},{value:"Docker Swarm",id:"docker-swarm",level:3},{value:"Configuration Management",id:"configuration-management",level:2},{value:"Environment Variables",id:"environment-variables-1",level:3},{value:"Config Files",id:"config-files",level:3},{value:"Networking",id:"networking",level:2},{value:"Load Balancing",id:"load-balancing",level:3},{value:"Security",id:"security",level:3},{value:"Monitoring",id:"monitoring",level:2},{value:"Metrics",id:"metrics",level:3},{value:"Logging",id:"logging",level:3},{value:"Logging",id:"logging-1",level:3},{value:"Scaling",id:"scaling",level:2},{value:"Multiple API Keys",id:"multiple-api-keys",level:3},{value:"Redis for Production",id:"redis-for-production",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Logs",id:"logs",level:3},{value:"Security",id:"security-1",level:2},{value:"API Key Management",id:"api-key-management",level:3},{value:"Best Practices",id:"best-practices",level:3}];function t(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"deployment",children:"Deployment"})}),"\n",(0,l.jsx)(n.p,{children:"This guide covers deploying COO-LLM in various environments, from development to production."}),"\n",(0,l.jsx)(n.h2,{id:"deployment-options",children:"Deployment Options"}),"\n",(0,l.jsx)(n.mermaid,{value:"flowchart TD\n    classDef dev fill:#28a745,color:#fff,stroke:#fff,stroke-width:2px\n    classDef prod fill:#dc3545,color:#fff,stroke:#fff,stroke-width:2px\n    classDef cloud fill:#007bff,color:#fff,stroke:#fff,stroke-width:2px\n\n    A[Development]:::dev\n    A --\x3e B[Local Binary<br/>go build]:::dev\n    A --\x3e C[Docker Compose<br/>Single container]:::dev\n\n    D[Production]:::prod\n    D --\x3e E[Docker<br/>Containerized]:::prod\n    D --\x3e F[Kubernetes<br/>Orchestrated]:::prod\n    D --\x3e G[AWS/GCP/Azure<br/>Cloud deployment]:::prod\n\n    H[Cloud Services]:::cloud\n    H --\x3e I[Vercel<br/>Serverless]:::cloud\n    H --\x3e J[Heroku<br/>PaaS]:::cloud\n    H --\x3e K[DigitalOcean<br/>Droplets]:::cloud\n\n    B --\x3e L[Config File<br/>Environment vars]:::dev\n    C --\x3e L\n    E --\x3e M[Config via<br/>Environment]:::prod\n    F --\x3e N[ConfigMaps<br/>Secrets]:::prod\n    G --\x3e O[Cloud Config<br/>Parameter Store]:::prod\n    I --\x3e P[Environment<br/>Variables]:::cloud\n    J --\x3e P\n    K --\x3e P"}),"\n",(0,l.jsx)(n.h2,{id:"docker-deployment",children:"Docker Deployment"}),"\n",(0,l.jsxs)(n.p,{children:["COO-LLM is distributed as a Docker image for easy deployment. All deployment methods use the ",(0,l.jsx)(n.code,{children:"khapu2906/coo-llm"})," image."]}),"\n",(0,l.jsx)(n.h3,{id:"basic-docker-run",children:"Basic Docker Run"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'docker run -d \\\n  --name coo-llm \\\n  -p 2906:2906 \\\n  -e OPENAI_API_KEY="your-key" \\\n  khapu2906/coo-llm:latest\n'})}),"\n",(0,l.jsx)(n.h3,{id:"with-config-file",children:"With Config File"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# Create config directory and file\nmkdir config\ncat > config/config.yaml << EOF\nversion: "1.0"\nserver:\n  listen: ":2906"\n\nllm_providers:\n  - id: "openai"\n    type: "openai"\n    api_keys: ["your-openai-key"]\n    model: "gpt-4o"\n\napi_keys:\n  - key: "test-key"\n    allowed_providers: ["*"]\nEOF\n\n# Run with mounted config\ndocker run -d \\\n  --name coo-llm \\\n  -p 2906:2906 \\\n  -v $(pwd)/config:/config \\\n  khapu2906/coo-llm:latest \\\n  --config /config/config.yaml\n'})}),"\n",(0,l.jsx)(n.h3,{id:"with-custom-web-ui",children:"With Custom Web UI"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# Assuming custom UI is built in ./webui/\ndocker run -d \\\n  --name coo-llm \\\n  -p 2906:2906 \\\n  -v $(pwd)/config:/config \\\n  -v $(pwd)/webui:/webui \\\n  -e COO_WEB_UI_PATH="/webui" \\\n  khapu2906/coo-llm:latest \\\n  --config /config/config.yaml\n'})}),"\n",(0,l.jsx)(n.h3,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Full stack with Redis:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'version: \'3.8\'\nservices:\n  coo-llm:\n    image: khapu2906/coo-llm:latest\n    ports:\n      - "2906:2906"\n    environment:\n      - OPENAI_API_KEY=${OPENAI_API_KEY}\n      - GEMINI_API_KEY=${GEMINI_API_KEY}\n    volumes:\n      - ./config:/config\n      - ./webui:/webui  # Optional\n    command: ["--config", "/config/config.yaml"]\n    depends_on:\n      - redis\n\n  redis:\n    image: redis:alpine\n    volumes:\n      - redis_data:/data\n\nvolumes:\n  redis_data:\n'})}),"\n",(0,l.jsx)(n.h3,{id:"docker-compose-1",children:"Docker Compose"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Full stack with Redis:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'# docker-compose.yml\nversion: \'3.8\'\nservices:\n  coo-llm:\n    build: .\n    ports:\n      - "2906:2906"\n    environment:\n      - OPENAI_API_KEY=${OPENAI_API_KEY}\n      - GEMINI_API_KEY=${GEMINI_API_KEY}\n    depends_on:\n      - redis\n    volumes:\n      - ./configs:/app/configs  # Mount config from host\n      - ./logs:/app/logs\n\n  redis:\n    image: redis:7\n    ports:\n      - "6379:6379"\n    volumes:\n      - redis_data:/data\n\nvolumes:\n  redis_data:\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Redis-only for development:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"# docker-compose.local.yml\nversion: '3.8'\nservices:\n  redis:\n    image: redis:7\n    ports:\n      - \"6379:6379\"\n    volumes:\n      - redis_data:/data\n\nvolumes:\n  redis_data:\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Run:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Full stack\ndocker-compose up -d\n\n# Redis only (for local development)\ndocker-compose -f docker-compose.local.yml up -d\n"})}),"\n",(0,l.jsx)(n.h2,{id:"production-deployment",children:"Production Deployment"}),"\n",(0,l.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Required:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'export OPENAI_API_KEY="sk-your-key"\nexport GEMINI_API_KEY="your-gemini-key"  # Optional\nexport CLAUDE_API_KEY="your-claude-key"  # Optional\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Optional:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'export REDIS_ADDR="redis:6379"           # For Redis storage\nexport REDIS_PASSWORD="your-password"    # If Redis requires auth\nexport ADMIN_API_KEY="your-admin-key"    # For admin endpoints (future)\n'})}),"\n",(0,l.jsx)(n.h3,{id:"kubernetes",children:"Kubernetes"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Basic Deployment:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: coo-llm\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: coo-llm\n  template:\n    metadata:\n      labels:\n        app: coo-llm\n    spec:\n      containers:\n      - name: coo-llm\n        image: coo-llm:latest\n        ports:\n        - containerPort: 2906\n        env:\n        - name: OPENAI_API_KEY\n          valueFrom:\n            secretKeyRef:\n              name: llm-secrets\n              key: openai-key\n        - name: REDIS_ADDR\n          value: "redis-service:6379"\n        volumeMounts:\n        - name: config\n          mountPath: /app/configs\n      volumes:\n      - name: config\n        configMap:\n          name: coo-llm-config\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Service:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: coo-llm\nspec:\n  selector:\n    app: coo-llm\n  ports:\n  - port: 80\n    targetPort: 2906\n  type: ClusterIP\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"ConfigMap:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coo-llm-config\ndata:\n  config.yaml: |\n    version: "1.0"\n    server:\n      listen: ":2906"\n    storage:\n      runtime:\n        type: redis\n        addr: "${REDIS_ADDR}"\n    llm_providers:\n      - id: openai\n        type: openai\n        api_keys: ["${OPENAI_API_KEY}"]\n        model: gpt-4o\n    # Use "openai:gpt-4o" directly (no model_aliases needed)\n'})}),"\n",(0,l.jsx)(n.h3,{id:"aws-ecs",children:"AWS ECS"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Task Definition:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "family": "coo-llm",\n  "taskRoleArn": "arn:aws:iam::123456789012:role/ecsTaskRole",\n  "executionRoleArn": "arn:aws:iam::123456789012:role/ecsTaskExecutionRole",\n  "networkMode": "awsvpc",\n  "requiresCompatibilities": ["FARGATE"],\n  "cpu": "256",\n  "memory": "512",\n  "containerDefinitions": [\n    {\n      "name": "coo-llm",\n      "image": "coo-llm:latest",\n      "essential": true,\n      "portMappings": [\n        {\n          "containerPort": 2906,\n          "hostPort": 2906\n        }\n      ],\n      "environment": [\n        {\n          "name": "OPENAI_API_KEY",\n          "valueFrom": "arn:aws:secretsmanager:region:123456789012:secret:openai-key"\n        }\n      ],\n      "logConfiguration": {\n        "logDriver": "awslogs",\n        "options": {\n          "awslogs-group": "/ecs/coo-llm",\n          "awslogs-region": "us-east-1",\n          "awslogs-stream-prefix": "ecs"\n        }\n      }\n    }\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"docker-swarm",children:"Docker Swarm"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"# docker-compose.swarm.yml\nversion: '3.8'\nservices:\n  coo-llm:\n    image: khapu2906/coo-llm:latest\n    ports:\n      - \"2906:2906\"\n    environment:\n      - OPENAI_API_KEY=${OPENAI_API_KEY}\n    configs:\n      - source: truckllm_config\n        target: /app/configs/config.yaml\n    deploy:\n      mode: replicated\n      replicas: 3\n      restart_policy:\n        condition: on-failure\n\n  redis:\n    image: redis:7-alpine\n    volumes:\n      - redis_data:/data\n    deploy:\n      mode: global\n\nconfigs:\n  truckllm_config:\n    file: ./configs/config.yaml\n\nvolumes:\n  redis_data:\n"})}),"\n",(0,l.jsx)(n.h2,{id:"configuration-management",children:"Configuration Management"}),"\n",(0,l.jsx)(n.h3,{id:"environment-variables-1",children:"Environment Variables"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Development:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'export OPENAI_API_KEY="sk-..."\nexport GEMINI_API_KEY="..."\nexport CLAUDE_API_KEY="..."\nexport REDIS_URL="redis://localhost:6379"\n'})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Production:"}),"\nUse secret management services:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"AWS Secrets Manager"}),"\n",(0,l.jsx)(n.li,{children:"Google Secret Manager"}),"\n",(0,l.jsx)(n.li,{children:"Azure Key Vault"}),"\n",(0,l.jsx)(n.li,{children:"HashiCorp Vault"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"config-files",children:"Config Files"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Directory Structure:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"configs/\n\u251c\u2500\u2500 config.yaml          # Main config\n\u251c\u2500\u2500 config.prod.yaml     # Production overrides\n\u251c\u2500\u2500 config.dev.yaml      # Development overrides\n\u2514\u2500\u2500 secrets/             # Encrypted secrets\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Environment-specific configs:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Development\n./coo-llm -config configs/config.dev.yaml\n\n# Production\n./coo-llm -config configs/config.prod.yaml\n"})}),"\n",(0,l.jsx)(n.h2,{id:"networking",children:"Networking"}),"\n",(0,l.jsx)(n.h3,{id:"load-balancing",children:"Load Balancing"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"nginx:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-nginx",children:"upstream coo-llm {\n    server coo-llm-1:2906;\n    server coo-llm-2:2906;\n    server coo-llm-3:2906;\n}\n\nserver {\n    listen 80;\n    server_name api.example.com;\n\n    location / {\n        proxy_pass http://coo-llm;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"AWS ALB:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Target Group: EC2 instances or ECS tasks"}),"\n",(0,l.jsxs)(n.li,{children:["Health Check: ",(0,l.jsx)(n.code,{children:"GET /health"})]}),"\n",(0,l.jsx)(n.li,{children:"SSL Termination: ACM certificate"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"TLS Configuration:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'server:\n  listen: ":8443"\n  tls:\n    cert_file: "/etc/ssl/certs/coo-llm.crt"\n    key_file: "/etc/ssl/private/coo-llm.key"\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"nginx with TLS:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-nginx",children:"server {\n    listen 443 ssl;\n    server_name api.example.com;\n\n    ssl_certificate /etc/ssl/certs/api.crt;\n    ssl_certificate_key /etc/ssl/private/api.key;\n\n    location / {\n        proxy_pass http://coo-llm;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"monitoring",children:"Monitoring"}),"\n",(0,l.jsx)(n.h3,{id:"metrics",children:"Metrics"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsxs)(n.strong,{children:["Prometheus metrics are available at ",(0,l.jsx)(n.code,{children:"/metrics"})," when enabled:"]})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'logging:\n  prometheus:\n    enabled: true\n    endpoint: "/metrics"\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Prometheus config:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"scrape_configs:\n  - job_name: 'coo-llm'\n    static_configs:\n      - targets: ['coo-llm:2906']\n    metrics_path: '/metrics'\n"})}),"\n",(0,l.jsx)(n.h3,{id:"logging",children:"Logging"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"File logging:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'logging:\n  file:\n    enabled: true\n    path: "./logs/llm.log"\n    max_size_mb: 100\n    max_backups: 5\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Logs include:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Request details (model, tokens, latency)"}),"\n",(0,l.jsx)(n.li,{children:"Provider selection"}),"\n",(0,l.jsx)(n.li,{children:"Errors and retries"}),"\n",(0,l.jsx)(n.li,{children:"Usage metrics"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"logging-1",children:"Logging"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Centralized Logging:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'logging:\n  providers:\n    - name: "elasticsearch"\n      type: "http"\n      endpoint: "https://es.example.com/_bulk"\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Log Aggregation:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"ELK Stack (Elasticsearch, Logstash, Kibana)"}),"\n",(0,l.jsx)(n.li,{children:"Splunk"}),"\n",(0,l.jsx)(n.li,{children:"Datadog"}),"\n",(0,l.jsx)(n.li,{children:"CloudWatch Logs"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"scaling",children:"Scaling"}),"\n",(0,l.jsx)(n.h3,{id:"multiple-api-keys",children:"Multiple API Keys"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Add multiple keys per provider for higher throughput:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'llm_providers:\n  - id: "openai-prod"\n    type: "openai"\n    api_keys: ["${OPENAI_KEY_1}", "${OPENAI_KEY_2}", "${OPENAI_KEY_3}"]\n    limits:\n      req_per_min: 200  # Per key\n      tokens_per_min: 100000\n'})}),"\n",(0,l.jsx)(n.h3,{id:"redis-for-production",children:"Redis for Production"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Use Redis for persistent metrics and caching:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'storage:\n  runtime:\n    type: "redis"\n    addr: "redis:6379"\n    password: "${REDIS_PASSWORD}"\n'})}),"\n",(0,l.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,l.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Application won't start:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Check config syntax\n./coo-llm -config configs/config.yaml\n\n# Check environment variables\necho $OPENAI_API_KEY\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Requests failing:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# Test basic connectivity\ncurl -X POST http://localhost:2906/v1/chat/completions \\\n  -H "Authorization: Bearer test-key" \\\n  -d \'{"model": "openai:gpt-4o", "messages": [{"role": "user", "content": "Hello"}]}\'\n\n# Check logs\ntail -f logs/llm.log\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Rate limiting errors:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Check your API key limits with the provider"}),"\n",(0,l.jsx)(n.li,{children:"Add more API keys to your configuration"}),"\n",(0,l.jsx)(n.li,{children:"Reduce request frequency"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"logs",children:"Logs"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsxs)(n.strong,{children:["Log files are written to ",(0,l.jsx)(n.code,{children:"./logs/llm.log"})," by default:"]})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'logging:\n  file:\n    enabled: true\n    path: "./logs/llm.log"\n    max_size_mb: 100\n    max_backups: 5\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Log entries include:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Request timestamps and models"}),"\n",(0,l.jsx)(n.li,{children:"Token usage and latency"}),"\n",(0,l.jsx)(n.li,{children:"Provider selection decisions"}),"\n",(0,l.jsx)(n.li,{children:"Errors and retry attempts"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"security-1",children:"Security"}),"\n",(0,l.jsx)(n.h3,{id:"api-key-management",children:"API Key Management"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Store API keys securely:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# Environment variables (recommended)\nexport OPENAI_API_KEY="sk-your-secure-key"\n\n# Or use a secrets file (not in repo)\necho "OPENAI_API_KEY=sk-your-key" > .env\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Client authentication:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'api_keys:\n  - key: "production-key"\n    allowed_providers: ["openai-prod", "gemini-prod"]\n    description: "Production client"\n'})}),"\n",(0,l.jsx)(n.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Use different API keys for different environments"}),"\n",(0,l.jsx)(n.li,{children:"Rotate keys regularly"}),"\n",(0,l.jsx)(n.li,{children:"Monitor usage patterns"}),"\n",(0,l.jsx)(n.li,{children:"Use HTTPS in production"}),"\n",(0,l.jsxs)(n.li,{children:["Limit API key permissions with ",(0,l.jsx)(n.code,{children:"allowed_providers"})]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(t,{...e})}):t(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var s=i(6540);const l={},o=s.createContext(l);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);