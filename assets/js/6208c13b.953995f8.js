"use strict";(globalThis.webpackChunkcoo_llm_docs=globalThis.webpackChunkcoo_llm_docs||[]).push([[1424],{7750:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Reference/Storage/DynamoDB","title":"DynamoDB Storage","description":"Serverless NoSQL database service for scalable COO-LLM data storage on AWS.","source":"@site/content/Reference/Storage/DynamoDB.md","sourceDirName":"Reference/Storage","slug":"/Reference/Storage/DynamoDB","permalink":"/docs/docs/Reference/Storage/DynamoDB","draft":false,"unlisted":false,"editUrl":"https://github.com/coo-llm/coo-llm-main/tree/main/docs/content/content/Reference/Storage/DynamoDB.md","tags":[{"inline":true,"label":"reference","permalink":"/docs/docs/tags/reference"},{"inline":true,"label":"storage","permalink":"/docs/docs/tags/storage"},{"inline":true,"label":"dynamodb","permalink":"/docs/docs/tags/dynamodb"},{"inline":true,"label":"aws","permalink":"/docs/docs/tags/aws"}],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"tags":["reference","storage","dynamodb","aws"]},"sidebar":"tutorialSidebar","previous":{"title":"MongoDB Storage","permalink":"/docs/docs/Reference/Storage/MongoDB"},"next":{"title":"InfluxDB Storage","permalink":"/docs/docs/Reference/Storage/InfluxDB"}}');var s=r(4848),i=r(8453);const o={sidebar_position:3,tags:["reference","storage","dynamodb","aws"]},a="DynamoDB Storage",l={},c=[{value:"Configuration",id:"configuration",level:2},{value:"Features",id:"features",level:2},{value:"Data Structure",id:"data-structure",level:2},{value:"Implementation Details",id:"implementation-details",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"dynamodb-storage",children:"DynamoDB Storage"})}),"\n",(0,s.jsx)(n.p,{children:"Serverless NoSQL database service for scalable COO-LLM data storage on AWS."}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'storage:\n  runtime:\n    type: "dynamodb"\n    addr: "us-east-1"  # AWS region\n    table_usage: "coo-llm-usage"\n    table_cache: "coo-llm-cache" \n    table_history: "coo-llm-history"\n    access_key: "${AWS_ACCESS_KEY_ID}"    # Optional, uses IAM roles\n    secret_key: "${AWS_SECRET_ACCESS_KEY}" # Optional, uses IAM roles\n'})}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Serverless"}),": No server management or capacity planning"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Auto Scaling"}),": Automatic throughput scaling based on demand"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Global Tables"}),": Multi-region replication for low-latency access"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Point-in-Time Recovery"}),": Continuous backups with 35-day retention"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Streams"}),": Real-time change data capture"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"DynamoDB Accelerator (DAX)"}),": In-memory caching for microsecond response times"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"On-Demand Pricing"}),": Pay-per-request pricing model"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"data-structure",children:"Data Structure"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Usage Table:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Primary Key: provider (HASH), key_id + metric (RANGE)\nAttributes: value (Number), updated_at (String)\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"History Table:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Primary Key: provider (HASH), timestamp (RANGE)\nAttributes: key_id, metric, delta\nGlobal Secondary Index: provider + key_id + metric (RANGE: timestamp)\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Cache Table:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Primary Key: cache_key (HASH)\nAttributes: value (String), expiry (Number)\nTTL enabled on expiry attribute\n"})}),"\n",(0,s.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"AWS SDK Integration"}),": Native DynamoDB API usage"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Batch Operations"}),": Efficient bulk read/write operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Conditional Updates"}),": Atomic operations with conditions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Error Handling"}),": Automatic retry with exponential backoff"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cost Optimization"}),": On-demand capacity mode"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"IAM Integration"}),": Secure credential management"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);