"use strict";(globalThis.webpackChunkcoo_llm_docs=globalThis.webpackChunkcoo_llm_docs||[]).push([[7279],{6719:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Reference/Glossary","title":"Glossary","description":"Definitions of key terms and concepts in COO-LLM.","source":"@site/content/Reference/Glossary.md","sourceDirName":"Reference","slug":"/Reference/Glossary","permalink":"/docs/docs/Reference/Glossary","draft":false,"unlisted":false,"editUrl":"https://github.com/coo-llm/coo-llm-main/tree/main/docs/content/content/Reference/Glossary.md","tags":[{"inline":true,"label":"reference","permalink":"/docs/docs/tags/reference"},{"inline":true,"label":"glossary","permalink":"/docs/docs/tags/glossary"}],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"tags":["reference","glossary"]},"sidebar":"tutorialSidebar","previous":{"title":"Error Codes & Troubleshooting","permalink":"/docs/docs/Reference/Error-Codes"}}');var r=s(4848),o=s(8453);const l={sidebar_position:3,tags:["reference","glossary"]},t="Glossary",c={},d=[{value:"A",id:"a",level:2},{value:"B",id:"b",level:2},{value:"C",id:"c",level:2},{value:"E",id:"e",level:2},{value:"F",id:"f",level:2},{value:"H",id:"h",level:2},{value:"K",id:"k",level:2},{value:"L",id:"l",level:2},{value:"M",id:"m",level:2},{value:"P",id:"p",level:2},{value:"R",id:"r",level:2},{value:"S",id:"s",level:2},{value:"T",id:"t",level:2},{value:"U",id:"u",level:2},{value:"W",id:"w",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"glossary",children:"Glossary"})}),"\n",(0,r.jsx)(n.p,{children:"Definitions of key terms and concepts in COO-LLM."}),"\n",(0,r.jsx)(n.h2,{id:"a",children:"A"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"API Key"}),": Authentication token for accessing COO-LLM APIs. Configured in ",(0,r.jsx)(n.code,{children:"api_keys"})," section with provider permissions."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Algorithm"}),": Load balancing method. Options: ",(0,r.jsx)(n.code,{children:"round_robin"}),", ",(0,r.jsx)(n.code,{children:"least_loaded"}),", ",(0,r.jsx)(n.code,{children:"hybrid"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"b",children:"B"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Balancer"}),": Component responsible for selecting providers and keys based on policies and usage metrics."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Base URL"}),": Provider's API endpoint. Defaults to official URLs but can be customized."]}),"\n",(0,r.jsx)(n.h2,{id:"c",children:"C"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Caching"}),": Response caching to reduce API calls and improve performance. Configured in ",(0,r.jsx)(n.code,{children:"policy.cache"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Client"}),": Application using COO-LLM API. Identified by API key."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Config"}),": YAML configuration file defining providers, policies, and settings."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Cost Estimation"}),": Calculated cost based on token usage and provider pricing."]}),"\n",(0,r.jsx)(n.h2,{id:"e",children:"E"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"E2E Tests"}),": End-to-end tests validating complete request flows."]}),"\n",(0,r.jsx)(n.h2,{id:"f",children:"F"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Failover"}),": Automatic switching to alternative providers/keys when primary fails."]}),"\n",(0,r.jsx)(n.h2,{id:"h",children:"H"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Health Check"}),": Endpoint (",(0,r.jsx)(n.code,{children:"/health"}),") for monitoring server status."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Hybrid Scoring"}),": Load balancing algorithm combining multiple metrics (cost, latency, errors)."]}),"\n",(0,r.jsx)(n.h2,{id:"k",children:"K"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key"}),": API key for a provider. Supports multiple keys per provider for load balancing."]}),"\n",(0,r.jsx)(n.h2,{id:"l",children:"L"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Latency"}),": Request processing time, measured in milliseconds."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Limits"}),": Rate limiting configuration per key (requests/minute, tokens/minute)."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Load Balancing"}),": Distribution of requests across multiple providers/keys."]}),"\n",(0,r.jsx)(n.h2,{id:"m",children:"M"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Metrics"}),": Performance and usage statistics collected by COO-LLM."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Model"}),": AI model identifier (e.g., ",(0,r.jsx)(n.code,{children:"gpt-4o"}),", ",(0,r.jsx)(n.code,{children:"claude-3-opus"}),")."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Model Alias"}),": Short name mapping to full ",(0,r.jsx)(n.code,{children:"provider:model"})," syntax (deprecated)."]}),"\n",(0,r.jsx)(n.h2,{id:"p",children:"P"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Policy"}),": Configuration defining load balancing behavior and algorithms."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Pricing"}),": Cost structure per provider (input/output token costs)."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Provider"}),": LLM service (OpenAI, Gemini, Claude). Configured in ",(0,r.jsx)(n.code,{children:"llm_providers"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"r",children:"R"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Rate Limiting"}),": Request throttling based on configured limits."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Request ID"}),": Unique identifier for each API request, used for tracing."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Retry"}),": Automatic retry on failures with configurable attempts and intervals."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Round Robin"}),": Simple load balancing algorithm cycling through options sequentially."]}),"\n",(0,r.jsx)(n.h2,{id:"s",children:"S"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Scoring"}),": Algorithm calculating preference scores for provider/key selection."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Session"}),': Time window for rate limiting (e.g., "1h", "1d").']}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Storage"}),": Backend for runtime data (metrics, cache). Types: memory, Redis, InfluxDB, etc."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Streaming"}),": Real-time response streaming for long outputs."]}),"\n",(0,r.jsx)(n.h2,{id:"t",children:"T"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Token"}),": Unit of text processing. Used for pricing and rate limiting."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"TTL (Time To Live)"}),": Cache expiration time in seconds."]}),"\n",(0,r.jsx)(n.h2,{id:"u",children:"U"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Usage Tracking"}),": Monitoring of requests, tokens, and costs per provider/key."]}),"\n",(0,r.jsx)(n.h2,{id:"w",children:"W"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Web UI"}),": Built-in web interface for monitoring and configuration."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Weights"}),": Scoring multipliers in hybrid algorithm (0.0-1.0 range)."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var i=s(6540);const r={},o=i.createContext(r);function l(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);