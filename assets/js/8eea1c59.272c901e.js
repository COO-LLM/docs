"use strict";(globalThis.webpackChunkcoo_llm_docs=globalThis.webpackChunkcoo_llm_docs||[]).push([[5358],{3676:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Contributing/Guidelines","title":"Contributing","description":"Thank you for your interest in contributing to COO-LLM! This document provides guidelines and information for contributors.","source":"@site/content/Contributing/Guidelines.md","sourceDirName":"Contributing","slug":"/Contributing/Guidelines","permalink":"/docs/docs/Contributing/Guidelines","draft":false,"unlisted":false,"editUrl":"https://github.com/coo-llm/coo-llm-main/tree/main/docs/content/content/Contributing/Guidelines.md","tags":[{"inline":true,"label":"developer-guide","permalink":"/docs/docs/tags/developer-guide"},{"inline":true,"label":"contributing","permalink":"/docs/docs/tags/contributing"}],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"tags":["developer-guide","contributing"]},"sidebar":"tutorialSidebar","previous":{"title":"Testing","permalink":"/docs/docs/Developer-Guide/Testing"},"next":{"title":"Changelog","permalink":"/docs/docs/Contributing/Changelog"}}');var t=i(4848),r=i(8453);const l={sidebar_position:6,tags:["developer-guide","contributing"]},o="Contributing",c={},d=[{value:"Code of Conduct",id:"code-of-conduct",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Development Environment",id:"development-environment",level:3},{value:"Project Structure",id:"project-structure",level:3},{value:"Development Workflow",id:"development-workflow",level:2},{value:"1. Choose an Issue",id:"1-choose-an-issue",level:3},{value:"2. Create a Branch",id:"2-create-a-branch",level:3},{value:"3. Make Changes",id:"3-make-changes",level:3},{value:"4. Test Your Changes",id:"4-test-your-changes",level:3},{value:"5. Submit a Pull Request",id:"5-submit-a-pull-request",level:3},{value:"Coding Standards",id:"coding-standards",level:2},{value:"Go Code Style",id:"go-code-style",level:3},{value:"Naming Conventions",id:"naming-conventions",level:3},{value:"Code Organization",id:"code-organization",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Testing",id:"testing",level:2},{value:"Unit Tests",id:"unit-tests",level:3},{value:"Integration Tests",id:"integration-tests",level:3},{value:"Test Coverage",id:"test-coverage",level:3},{value:"Documentation",id:"documentation",level:2},{value:"Code Documentation",id:"code-documentation",level:3},{value:"API Documentation",id:"api-documentation",level:3},{value:"README Updates",id:"readme-updates",level:3},{value:"Adding New Providers",id:"adding-new-providers",level:2},{value:"Adding Storage Backends",id:"adding-storage-backends",level:2},{value:"Pull Request Process",id:"pull-request-process",level:2},{value:"Before Submitting",id:"before-submitting",level:3},{value:"PR Template",id:"pr-template",level:3},{value:"Review Process",id:"review-process",level:3},{value:"Release Process",id:"release-process",level:2},{value:"Versioning",id:"versioning",level:3},{value:"Release Checklist",id:"release-checklist",level:3},{value:"Community",id:"community",level:2},{value:"Communication",id:"communication",level:3},{value:"Getting Help",id:"getting-help",level:3},{value:"Recognition",id:"recognition",level:3},{value:"License",id:"license",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"contributing",children:"Contributing"})}),"\n",(0,t.jsx)(n.p,{children:"Thank you for your interest in contributing to COO-LLM! This document provides guidelines and information for contributors."}),"\n",(0,t.jsx)(n.h2,{id:"code-of-conduct",children:"Code of Conduct"}),"\n",(0,t.jsx)(n.p,{children:"This project follows a code of conduct to ensure a welcoming environment for all contributors. By participating, you agree to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Be respectful and inclusive"}),"\n",(0,t.jsx)(n.li,{children:"Focus on constructive feedback"}),"\n",(0,t.jsx)(n.li,{children:"Accept responsibility for mistakes"}),"\n",(0,t.jsx)(n.li,{children:"Show empathy towards other contributors"}),"\n",(0,t.jsx)(n.li,{children:"Help create a positive community"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsx)(n.h3,{id:"development-environment",children:"Development Environment"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Prerequisites:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Go 1.21 or later"}),"\n",(0,t.jsx)(n.li,{children:"Docker and Docker Compose"}),"\n",(0,t.jsx)(n.li,{children:"Git"}),"\n",(0,t.jsx)(n.li,{children:"Make"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Clone the repository:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/user/coo-llm.git\ncd coo-llm\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Install dependencies:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"go mod download\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Run tests:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"make test\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Build and run:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"make build\nmake run\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"project-structure",children:"Project Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"coo-llm/\n\u251c\u2500\u2500 cmd/                    # Application entrypoints\n\u2502   \u2514\u2500\u2500 coo-llm/       # Main application\n\u251c\u2500\u2500 internal/              # Private application code\n\u2502   \u251c\u2500\u2500 api/              # HTTP API handlers\n\u2502   \u251c\u2500\u2500 balancer/         # Load balancing logic\n\u2502   \u251c\u2500\u2500 config/           # Configuration management\n\u2502   \u251c\u2500\u2500 log/              # Logging system\n\u2502   \u251c\u2500\u2500 provider/         # LLM provider adapters\n\u2502   \u2514\u2500\u2500 store/            # Storage backends\n\u251c\u2500\u2500 pkg/                   # Public packages\n\u251c\u2500\u2500 configs/               # Configuration files\n\u251c\u2500\u2500 docs/                  # Documentation site\n\u251c\u2500\u2500 test/                  # Integration tests\n\u251c\u2500\u2500 docker-compose.yml     # Docker setup\n\u251c\u2500\u2500 Dockerfile            # Container build\n\u251c\u2500\u2500 Makefile              # Build automation\n\u251c\u2500\u2500 go.mod                # Go modules\n\u2514\u2500\u2500 README.md             # Project overview\n"})}),"\n",(0,t.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,t.jsx)(n.h3,{id:"1-choose-an-issue",children:"1. Choose an Issue"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Check ",(0,t.jsx)(n.a,{href:"https://github.com/user/coo-llm/issues",children:"GitHub Issues"})," for open tasks"]}),"\n",(0,t.jsxs)(n.li,{children:["Look for issues labeled ",(0,t.jsx)(n.code,{children:"good first issue"})," or ",(0,t.jsx)(n.code,{children:"help wanted"})]}),"\n",(0,t.jsx)(n.li,{children:"Comment on the issue to indicate you're working on it"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-create-a-branch",children:"2. Create a Branch"}),"\n",(0,t.jsx)(n.p,{children:"Follow the branch naming convention:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git checkout -b feat/v1.2.x/your-feature-name\n# or\ngit checkout -b fix/v1.1.x/issue-description\n"})}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"https://github.com/your-org/coo-llm/blob/main/CONTRIBUTING.md",children:"CONTRIBUTING.md"})," for full branch naming guidelines."]}),"\n",(0,t.jsx)(n.h3,{id:"3-make-changes",children:"3. Make Changes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Write clear, concise commit messages"}),"\n",(0,t.jsx)(n.li,{children:"Follow the existing code style"}),"\n",(0,t.jsx)(n.li,{children:"Add tests for new functionality"}),"\n",(0,t.jsx)(n.li,{children:"Update documentation as needed"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"4-test-your-changes",children:"4. Test Your Changes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Run unit tests\ngo test ./...\n\n# Run integration tests\ngo test ./test/...\n\n# Run linting\nmake lint\n\n# Build the project\nmake build\n"})}),"\n",(0,t.jsx)(n.h3,{id:"5-submit-a-pull-request",children:"5. Submit a Pull Request"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Push your branch to GitHub"}),"\n",(0,t.jsx)(n.li,{children:"Create a pull request with a clear description"}),"\n",(0,t.jsx)(n.li,{children:"Reference any related issues"}),"\n",(0,t.jsx)(n.li,{children:"Wait for review and address feedback"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"coding-standards",children:"Coding Standards"}),"\n",(0,t.jsx)(n.h3,{id:"go-code-style",children:"Go Code Style"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Follow standard Go formatting (",(0,t.jsx)(n.code,{children:"go fmt"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"gofmt -s"})," for additional simplifications"]}),"\n",(0,t.jsxs)(n.li,{children:["Run ",(0,t.jsx)(n.code,{children:"go vet"})," to check for common mistakes"]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"golint"})," for style issues"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"naming-conventions",children:"Naming Conventions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use descriptive names for variables and functions"}),"\n",(0,t.jsx)(n.li,{children:"Follow Go naming conventions (camelCase for private, PascalCase for public)"}),"\n",(0,t.jsx)(n.li,{children:"Use consistent naming patterns"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"code-organization",children:"Code Organization"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Keep functions small and focused"}),"\n",(0,t.jsx)(n.li,{children:"Use interfaces for abstraction"}),"\n",(0,t.jsx)(n.li,{children:"Separate concerns properly"}),"\n",(0,t.jsx)(n.li,{children:"Add comments for complex logic"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Return errors instead of panicking"}),"\n",(0,t.jsx)(n.li,{children:"Use error wrapping for context"}),"\n",(0,t.jsx)(n.li,{children:"Handle errors at appropriate levels"}),"\n",(0,t.jsx)(n.li,{children:"Log errors with sufficient context"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,t.jsx)(n.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Place test files alongside source code (",(0,t.jsx)(n.code,{children:"*_test.go"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Use table-driven tests for multiple test cases"}),"\n",(0,t.jsx)(n.li,{children:"Mock external dependencies"}),"\n",(0,t.jsx)(n.li,{children:"Aim for high coverage (>80%)"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'func TestFunction(t *testing.T) {\n    tests := []struct {\n        name     string\n        input    string\n        expected string\n        wantErr  bool\n    }{\n        {"valid input", "hello", "HELLO", false},\n        {"empty input", "", "", true},\n    }\n\n    for _, tt := range tests {\n        t.Run(tt.name, func(t *testing.T) {\n            result, err := Function(tt.input)\n            if tt.wantErr {\n                assert.Error(t, err)\n            } else {\n                assert.NoError(t, err)\n                assert.Equal(t, tt.expected, result)\n            }\n        })\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"integration-tests",children:"Integration Tests"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Place integration tests in ",(0,t.jsx)(n.code,{children:"test/"})," directory"]}),"\n",(0,t.jsx)(n.li,{children:"Test complete workflows"}),"\n",(0,t.jsx)(n.li,{children:"Use real dependencies where possible"}),"\n",(0,t.jsx)(n.li,{children:"Clean up resources after tests"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"test-coverage",children:"Test Coverage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Generate coverage report\ngo test -coverprofile=coverage.out ./...\n\n# View coverage in browser\ngo tool cover -html=coverage.out\n\n# Coverage summary\ngo tool cover -func=coverage.out\n"})}),"\n",(0,t.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,t.jsx)(n.h3,{id:"code-documentation",children:"Code Documentation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Add package comments for exported packages"}),"\n",(0,t.jsx)(n.li,{children:"Document exported functions, types, and methods"}),"\n",(0,t.jsx)(n.li,{children:"Use examples in documentation"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:"// Package provider contains LLM provider implementations.\n//\n// Example:\n//\n//\tp, err := provider.NewOpenAIProvider(config)\n//\tif err != nil {\n//\t    log.Fatal(err)\n//\t}\n//\n//\tresp, err := p.Generate(ctx, req)\npackage provider\n\n// Generate sends a request to the LLM provider and returns the response.\n// It handles authentication, request formatting, and response parsing.\nfunc (p *OpenAIProvider) Generate(ctx context.Context, req *Request) (*Response, error) {\n    // implementation\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"api-documentation",children:"API Documentation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Document REST API endpoints"}),"\n",(0,t.jsx)(n.li,{children:"Include request/response examples"}),"\n",(0,t.jsx)(n.li,{children:"Specify error conditions"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"readme-updates",children:"README Updates"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Update README.md for significant changes"}),"\n",(0,t.jsx)(n.li,{children:"Add examples for new features"}),"\n",(0,t.jsx)(n.li,{children:"Update installation instructions"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"adding-new-providers",children:"Adding New Providers"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Implement the Provider interface:"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:"type CustomProvider struct {\n    cfg *config.Provider\n}\n\nfunc NewCustomProvider(cfg *config.Provider) *CustomProvider {\n    return &CustomProvider{cfg: cfg}\n}\n\nfunc (p *CustomProvider) Name() string {\n    return p.cfg.ID\n}\n\nfunc (p *CustomProvider) Generate(ctx context.Context, req *Request) (*Response, error) {\n    // Implementation\n}\n\nfunc (p *CustomProvider) ListModels(ctx context.Context) ([]string, error) {\n    // Implementation\n}\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Register in the provider registry:"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'func (r *Registry) LoadFromConfig(cfg *config.Config) error {\n    // ... existing providers ...\n    case "custom":\n        p = NewCustomProvider(&pCfg)\n    // ...\n}\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Add configuration example:"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'providers:\n  - id: custom\n    name: "Custom Provider"\n    base_url: "https://api.custom.com/v1"\n    keys:\n      - secret: "${CUSTOM_API_KEY}"\n        pricing:\n          input_token_cost: 0.001\n          output_token_cost: 0.002\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Add tests and documentation"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"adding-storage-backends",children:"Adding Storage Backends"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Implement the storage interface:"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:"type CustomStore struct {\n    // fields\n}\n\nfunc (s *CustomStore) GetUsage(provider, keyID, metric string) (float64, error) {\n    // Implementation\n}\n\nfunc (s *CustomStore) SetUsage(provider, keyID, metric string, value float64) error {\n    // Implementation\n}\n\nfunc (s *CustomStore) IncrementUsage(provider, keyID, metric string, delta float64) error {\n    // Implementation\n}\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Add to main application:"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'func initStorage(cfg *config.Config) store.RuntimeStore {\n    switch cfg.Storage.Runtime.Type {\n    case "custom":\n        return NewCustomStore(cfg.Storage.Runtime)\n    // ... other cases ...\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"pull-request-process",children:"Pull Request Process"}),"\n",(0,t.jsx)(n.h3,{id:"before-submitting",children:"Before Submitting"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Tests pass (",(0,t.jsx)(n.code,{children:"make test"}),")"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Code is formatted (",(0,t.jsx)(n.code,{children:"go fmt"}),")"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","No linting errors (",(0,t.jsx)(n.code,{children:"make lint"}),")"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Documentation updated"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Commit messages are clear"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"pr-template",children:"PR Template"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markdown",children:"## Description\nBrief description of the changes.\n\n## Type of Change\n- [ ] Bug fix\n- [ ] New feature\n- [ ] Breaking change\n- [ ] Documentation update\n\n## Testing\n- [ ] Unit tests added/updated\n- [ ] Integration tests added/updated\n- [ ] Manual testing performed\n\n## Checklist\n- [ ] Code follows project style\n- [ ] Documentation updated\n- [ ] Tests pass\n- [ ] No breaking changes\n"})}),"\n",(0,t.jsx)(n.h3,{id:"review-process",children:"Review Process"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automated Checks:"})," CI runs tests and linting"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Code Review:"})," Maintainers review code changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Testing:"})," Additional testing may be requested"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Approval:"})," PR approved and merged"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"release-process",children:"Release Process"}),"\n",(0,t.jsx)(n.h3,{id:"versioning",children:"Versioning"}),"\n",(0,t.jsxs)(n.p,{children:["COO-LLM follows ",(0,t.jsx)(n.a,{href:"https://semver.org/",children:"Semantic Versioning"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"MAJOR:"})," Breaking changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"MINOR:"})," New features"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"PATCH:"})," Bug fixes"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"release-checklist",children:"Release Checklist"}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Update version in code"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Update CHANGELOG.md"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Create git tag"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Build and test release artifacts"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Publish to package registry"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Update documentation"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"community",children:"Community"}),"\n",(0,t.jsx)(n.h3,{id:"communication",children:"Communication"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GitHub Issues:"})," Bug reports and feature requests"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Discussions:"})," General questions and ideas"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pull Requests:"})," Code contributions"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"getting-help",children:"Getting Help"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Check existing issues and documentation"}),"\n",(0,t.jsx)(n.li,{children:"Ask questions in GitHub Discussions"}),"\n",(0,t.jsx)(n.li,{children:"Join our community chat (if available)"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"recognition",children:"Recognition"}),"\n",(0,t.jsx)(n.p,{children:"Contributors are recognized in:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"CHANGELOG.md for releases"}),"\n",(0,t.jsx)(n.li,{children:"GitHub contributor statistics"}),"\n",(0,t.jsx)(n.li,{children:"Release notes"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,t.jsx)(n.p,{children:"By contributing to COO-LLM, you agree that your contributions will be licensed under the same license as the project (MIT License)."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var s=i(6540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);