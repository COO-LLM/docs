"use strict";(globalThis.webpackChunkcoo_llm_docs=globalThis.webpackChunkcoo_llm_docs||[]).push([[56],{5233:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>g,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var t=l(8168),r=(l(6540),l(5680));const i={sidebar_position:5,tags:["developer-guide","logging"]},a="Logging",o={unversionedId:"Reference/Logging",id:"Reference/Logging",title:"Logging",description:"COO-LLM provides structured logging with file output and Prometheus metrics integration.",source:"@site/docs/Reference/Logging.md",sourceDirName:"Reference",slug:"/Reference/Logging",permalink:"/docs/docs/Reference/Logging",draft:!1,editUrl:"https://github.com/your-org/coo-llm/tree/main/docs/docs/docs/Reference/Logging.md",tags:[{label:"developer-guide",permalink:"/docs/docs/tags/developer-guide"},{label:"logging",permalink:"/docs/docs/tags/logging"}],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,tags:["developer-guide","logging"]},sidebar:"tutorialSidebar",previous:{title:"Storage",permalink:"/docs/docs/Reference/Storage"},next:{title:"Contributing",permalink:"/docs/docs/Contributing/Guidelines"}},g={},s=[{value:"Log Implementation",id:"log-implementation",level:2},{value:"Log Levels",id:"log-levels",level:2},{value:"Structured Logging",id:"structured-logging",level:2},{value:"Configuration",id:"configuration",level:2},{value:"File Logging",id:"file-logging",level:3},{value:"Prometheus Metrics",id:"prometheus-metrics",level:3},{value:"Log Types",id:"log-types",level:2},{value:"Request Logs",id:"request-logs",level:3},{value:"Application Logs",id:"application-logs",level:3},{value:"Prometheus Metrics",id:"prometheus-metrics-1",level:3},{value:"Output Backends",id:"output-backends",level:2},{value:"File Backend",id:"file-backend",level:3},{value:"Prometheus Backend",id:"prometheus-backend",level:3},{value:"Log Analysis",id:"log-analysis",level:2},{value:"Log Queries",id:"log-queries",level:3},{value:"Monitoring",id:"monitoring",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Log Levels",id:"log-levels-1",level:3},{value:"Structured Fields",id:"structured-fields",level:3},{value:"Retention",id:"retention",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Log Inspection",id:"log-inspection",level:3},{value:"Implementation Notes",id:"implementation-notes",level:2}],u={toc:s},p="wrapper";function m({components:e,...n}){return(0,r.yg)(p,(0,t.A)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"logging"},"Logging"),(0,r.yg)("p",null,"COO-LLM provides structured logging with file output and Prometheus metrics integration."),(0,r.yg)("h2",{id:"log-implementation"},"Log Implementation"),(0,r.yg)("p",null,"Based on ",(0,r.yg)("inlineCode",{parentName:"p"},"internal/log/logger.go"),", COO-LLM uses Zerolog for structured JSON logging with the following features:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"File logging with rotation"),(0,r.yg)("li",{parentName:"ul"},"Prometheus metrics integration"),(0,r.yg)("li",{parentName:"ul"},"Request logging with context"),(0,r.yg)("li",{parentName:"ul"},"Structured JSON format")),(0,r.yg)("h2",{id:"log-levels"},"Log Levels"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"INFO:")," Normal operations and request logs"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"WARN:")," Warnings and non-critical issues"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"ERROR:")," Errors and failures"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"DEBUG:")," Detailed debugging (when enabled)")),(0,r.yg)("h2",{id:"structured-logging"},"Structured Logging"),(0,r.yg)("p",null,"Logs use JSON format with consistent fields:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "level": "info",\n  "provider": "openai-prod",\n  "model": "gpt-4o",\n  "reqID": "1234567890",\n  "latencyMS": 1200,\n  "status": 200,\n  "tokens": 150,\n  "error": "",\n  "time": "2024-01-01T12:00:00Z"\n}\n')),(0,r.yg)("h2",{id:"configuration"},"Configuration"),(0,r.yg)("h3",{id:"file-logging"},"File Logging"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'logging:\n  file:\n    enabled: true\n    path: "./logs/llm.log"\n    max_size_mb: 100\n    max_backups: 5\n')),(0,r.yg)("h3",{id:"prometheus-metrics"},"Prometheus Metrics"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'logging:\n  prometheus:\n    enabled: true\n    endpoint: "/metrics"\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Note:")," HTTP webhooks and advanced batching are not yet implemented."),(0,r.yg)("h2",{id:"log-types"},"Log Types"),(0,r.yg)("h3",{id:"request-logs"},"Request Logs"),(0,r.yg)("p",null,"Logged for each chat completion request via ",(0,r.yg)("inlineCode",{parentName:"p"},"logger.LogRequest()"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "level": "info",\n  "provider": "openai-prod",\n  "model": "gpt-4o",\n  "reqID": "1699123456789",\n  "latencyMS": 1200,\n  "status": 200,\n  "tokens": 150,\n  "error": "",\n  "time": "2024-01-01T12:00:00Z"\n}\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Fields:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"provider"),": Provider ID used for the request"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"model"),": Model name requested"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"reqID"),": Unique request identifier"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"latencyMS"),": Response time in milliseconds"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"status"),": HTTP status code"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"tokens"),": Total tokens used"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"error"),": Error message (if any)")),(0,r.yg)("h3",{id:"application-logs"},"Application Logs"),(0,r.yg)("p",null,"General application events and errors:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "level": "info",\n  "message": "Starting server on :8080",\n  "time": "2024-01-01T12:00:00Z"\n}\n')),(0,r.yg)("h3",{id:"prometheus-metrics-1"},"Prometheus Metrics"),(0,r.yg)("p",null,"When enabled, metrics are exposed at ",(0,r.yg)("inlineCode",{parentName:"p"},"/metrics")," endpoint."),(0,r.yg)("h2",{id:"output-backends"},"Output Backends"),(0,r.yg)("h3",{id:"file-backend"},"File Backend"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Features:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"JSON structured logging"),(0,r.yg)("li",{parentName:"ul"},"Automatic rotation by size"),(0,r.yg)("li",{parentName:"ul"},"Configurable retention")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Configuration:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'logging:\n  file:\n    enabled: true\n    path: "./logs/llm.log"\n    max_size_mb: 100\n    max_backups: 5\n')),(0,r.yg)("h3",{id:"prometheus-backend"},"Prometheus Backend"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Features:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Metrics endpoint at ",(0,r.yg)("inlineCode",{parentName:"li"},"/metrics")),(0,r.yg)("li",{parentName:"ul"},"Integration with monitoring systems")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Configuration:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'logging:\n  prometheus:\n    enabled: true\n    endpoint: "/metrics"\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Note:")," HTTP webhooks, batching, filtering, and advanced features are not yet implemented."),(0,r.yg)("h2",{id:"log-analysis"},"Log Analysis"),(0,r.yg)("h3",{id:"log-queries"},"Log Queries"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Find slow requests:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"grep '\"latencyMS\":[0-9]\\{4,\\}' logs/llm.log\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Count requests by provider:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"grep '\"provider\"' logs/llm.log | jq -r '.provider' | sort | uniq -c\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Find errors:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'grep \'"level":"error"\' logs/llm.log\n')),(0,r.yg)("h3",{id:"monitoring"},"Monitoring"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Prometheus metrics can be scraped for monitoring:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-prometheus"},"# Metrics are available at /metrics when enabled\n")),(0,r.yg)("h2",{id:"best-practices"},"Best Practices"),(0,r.yg)("h3",{id:"log-levels-1"},"Log Levels"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"INFO:")," Normal request logging"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"WARN:")," Warnings"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"ERROR:")," Errors and failures")),(0,r.yg)("h3",{id:"structured-fields"},"Structured Fields"),(0,r.yg)("p",null,"Request logs include:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"provider"),": Provider used"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"model"),": Model requested"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"reqID"),": Request correlation ID"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"latencyMS"),": Response time"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"status"),": HTTP status"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"tokens"),": Token usage"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"error"),": Error details")),(0,r.yg)("h3",{id:"retention"},"Retention"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Application logs:")," Configurable via ",(0,r.yg)("inlineCode",{parentName:"li"},"max_backups")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Log rotation:")," Automatic by size (",(0,r.yg)("inlineCode",{parentName:"li"},"max_size_mb"),")")),(0,r.yg)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.yg)("h3",{id:"common-issues"},"Common Issues"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Logs not appearing:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Check file permissions on ",(0,r.yg)("inlineCode",{parentName:"li"},"./logs/")," directory"),(0,r.yg)("li",{parentName:"ul"},"Verify ",(0,r.yg)("inlineCode",{parentName:"li"},"logging.file.enabled: true")),(0,r.yg)("li",{parentName:"ul"},"Check available disk space")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Log rotation not working:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Ensure write permissions on log directory"),(0,r.yg)("li",{parentName:"ul"},"Check ",(0,r.yg)("inlineCode",{parentName:"li"},"max_size_mb")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"max_backups")," settings")),(0,r.yg)("h3",{id:"log-inspection"},"Log Inspection"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"# View recent logs\ntail -f logs/llm.log | jq .\n\n# Search for specific request ID\ngrep \"1234567890\" logs/llm.log\n\n# Count requests by status\njq -r '.status' logs/llm.log | sort | uniq -c\n")),(0,r.yg)("h2",{id:"implementation-notes"},"Implementation Notes"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Logging is synchronous to ensure request logs are written"),(0,r.yg)("li",{parentName:"ul"},"Uses Zerolog for high-performance structured logging"),(0,r.yg)("li",{parentName:"ul"},"File rotation prevents disk space issues"),(0,r.yg)("li",{parentName:"ul"},"Prometheus integration provides metrics endpoint")))}m.isMDXComponent=!0},5680:(e,n,l)=>{l.d(n,{xA:()=>u,yg:()=>c});var t=l(6540);function r(e,n,l){return n in e?Object.defineProperty(e,n,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[n]=l,e}function i(e,n){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),l.push.apply(l,t)}return l}function a(e){for(var n=1;n<arguments.length;n++){var l=null!=arguments[n]?arguments[n]:{};n%2?i(Object(l),!0).forEach(function(n){r(e,n,l[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):i(Object(l)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(l,n))})}return e}function o(e,n){if(null==e)return{};var l,t,r=function(e,n){if(null==e)return{};var l,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)l=i[t],n.indexOf(l)>=0||(r[l]=e[l]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)l=i[t],n.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var g=t.createContext({}),s=function(e){var n=t.useContext(g),l=n;return e&&(l="function"==typeof e?e(n):a(a({},n),e)),l},u=function(e){var n=s(e.components);return t.createElement(g.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef(function(e,n){var l=e.components,r=e.mdxType,i=e.originalType,g=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=s(l),d=r,c=p["".concat(g,".").concat(d)]||p[d]||m[d]||i;return l?t.createElement(c,a(a({ref:n},u),{},{components:l})):t.createElement(c,a({ref:n},u))});function c(e,n){var l=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=l.length,a=new Array(i);a[0]=d;var o={};for(var g in n)hasOwnProperty.call(n,g)&&(o[g]=n[g]);o.originalType=e,o[p]="string"==typeof e?e:r,a[1]=o;for(var s=2;s<i;s++)a[s]=l[s];return t.createElement.apply(null,a)}return t.createElement.apply(null,l)}d.displayName="MDXCreateElement"}}]);