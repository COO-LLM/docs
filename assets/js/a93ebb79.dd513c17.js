"use strict";(globalThis.webpackChunkcoo_llm_docs=globalThis.webpackChunkcoo_llm_docs||[]).push([[493],{5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>s});var a=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach(function(n){r(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function g(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),d=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=d(e.components);return a.createElement(o.Provider,{value:n},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef(function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=g(e,["components","mdxType","originalType","parentName"]),y=d(t),u=r,s=y["".concat(o,".").concat(u)]||y[u]||m[u]||l;return t?a.createElement(s,i(i({ref:n},p),{},{components:t})):a.createElement(s,i({ref:n},p))});function s(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=u;var g={};for(var o in n)hasOwnProperty.call(n,o)&&(g[o]=n[o]);g.originalType=e,g[y]="string"==typeof e?e:r,i[1]=g;for(var d=2;d<l;d++)i[d]=t[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6180:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>g,toc:()=>d});var a=t(8168),r=(t(6540),t(5680));const l={sidebar_position:2,tags:["user-guide","configuration"]},i="Configuration",g={unversionedId:"Guides/Configuration",id:"Guides/Configuration",title:"Configuration",description:"COO-LLM uses YAML configuration files for all settings. The configuration is hierarchical and supports environment variable substitution, validation, and hot-reload.",source:"@site/docs/Guides/Configuration.md",sourceDirName:"Guides",slug:"/Guides/Configuration",permalink:"/docs/docs/Guides/Configuration",draft:!1,editUrl:"https://github.com/your-org/coo-llm/tree/main/docs/docs/docs/Guides/Configuration.md",tags:[{label:"user-guide",permalink:"/docs/docs/tags/user-guide"},{label:"configuration",permalink:"/docs/docs/tags/configuration"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,tags:["user-guide","configuration"]},sidebar:"tutorialSidebar",previous:{title:"COO-LLM Overview",permalink:"/docs/docs/Intro/Overview"},next:{title:"Deployment",permalink:"/docs/docs/Guides/Deployment"}},o={},d=[{value:"Configuration File Structure",id:"configuration-file-structure",level:2},{value:"Configuration Sections",id:"configuration-sections",level:2},{value:"Server Configuration",id:"server-configuration",level:3},{value:"Logging Configuration",id:"logging-configuration",level:3},{value:"File Logging",id:"file-logging",level:4},{value:"Prometheus Logging",id:"prometheus-logging",level:4},{value:"Log Providers",id:"log-providers",level:4},{value:"Storage Configuration",id:"storage-configuration",level:3},{value:"Config Storage",id:"config-storage",level:4},{value:"Runtime Storage",id:"runtime-storage",level:4},{value:"LLM Provider Configuration",id:"llm-provider-configuration",level:3},{value:"API Key Permissions",id:"api-key-permissions",level:3},{value:"Model Aliases",id:"model-aliases",level:3},{value:"Policy Configuration",id:"policy-configuration",level:3},{value:"Model Aliases",id:"model-aliases-1",level:3},{value:"Policy Configuration",id:"policy-configuration-1",level:3},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Configuration Validation",id:"configuration-validation",level:2},{value:"Hot Reload",id:"hot-reload",level:2},{value:"Example Configurations",id:"example-configurations",level:2},{value:"Minimal Configuration",id:"minimal-configuration",level:3},{value:"Production Configuration",id:"production-configuration",level:3},{value:"Configuration API",id:"configuration-api",level:2}],p={toc:d},y="wrapper";function m({components:e,...n}){return(0,r.yg)(y,(0,a.A)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"configuration"},"Configuration"),(0,r.yg)("p",null,"COO-LLM uses YAML configuration files for all settings. The configuration is hierarchical and supports environment variable substitution, validation, and hot-reload."),(0,r.yg)("h2",{id:"configuration-file-structure"},"Configuration File Structure"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'version: "1.0"\n\nserver:\n  listen: ":8080"\n  admin_api_key: "admin-secret"\n\nlogging:\n  file:\n    enabled: true\n    path: "./logs/llm.log"\n    max_size_mb: 100\n    max_backups: 5\n  prometheus:\n    enabled: true\n    endpoint: "/metrics"\n\nstorage:\n  config:\n    type: "file"\n    path: "./configs/config.yaml"\n  runtime:\n    type: "redis"  # redis, memory, http, file\n    addr: "localhost:6379"\n    password: ""\n    api_key: ""\n\nllm_providers:\n  - id: "openai-prod"\n    type: "openai"\n    api_keys: ["${OPENAI_KEY_1}", "${OPENAI_KEY_2}"]\n    base_url: "https://api.openai.com"\n    model: "gpt-4o"\n    pricing:\n      input_token_cost: 0.002\n      output_token_cost: 0.01\n    limits:\n      req_per_min: 200\n      tokens_per_min: 100000\n  - id: "gemini-prod"\n    type: "gemini"\n    api_keys: ["${GEMINI_KEY_1}"]\n    base_url: "https://generativelanguage.googleapis.com"\n    model: "gemini-1.5-pro"\n    pricing:\n      input_token_cost: 0.00025\n      output_token_cost: 0.0005\n    limits:\n      req_per_min: 150\n      tokens_per_min: 80000\n  - id: "claude-prod"\n    type: "claude"\n    api_keys: ["${CLAUDE_KEY_1}"]\n    base_url: "https://api.anthropic.com"\n    model: "claude-3-opus"\n    pricing:\n      input_token_cost: 0.015\n      output_token_cost: 0.075\n    limits:\n      req_per_min: 100\n      tokens_per_min: 60000\n  - id: "custom-dev"\n    type: "custom"\n    api_keys: ["${CUSTOM_KEY_1}"]\n    base_url: "https://custom-llm.example.com"\n    model: "custom-model"\n    pricing:\n      input_token_cost: 0.001\n      output_token_cost: 0.002\n    limits:\n      req_per_min: 50\n      tokens_per_min: 10000\n\napi_keys:\n  - key: "test-key"\n    allowed_providers: ["*"]  # Access all providers\n    description: "Development test key"\n  - key: "openai-only"\n    allowed_providers: ["openai-prod"]\n    description: "OpenAI production access only"\n  - key: "premium"\n    allowed_providers: ["openai-prod", "claude-prod"]\n    description: "Premium access to OpenAI and Claude"\n\nmodel_aliases:\n  gpt-4o: openai-prod:gpt-4o\n  gemini-1.5-pro: gemini-prod:gemini-1.5-pro\n  claude-3-opus: claude-prod:claude-3-opus\n  custom-model: custom-dev:custom-model\n\npolicy:\n  strategy: "hybrid"\n  algorithm: "hybrid"   # round_robin, least_loaded, hybrid\n  priority: "balanced"  # balanced, cost, req, token (auto-sets weights)\n  hybrid_weights:       # Auto-set based on priority, or customize\n    token_ratio: 0.2\n    req_ratio: 0.2\n    error_score: 0.2\n    latency: 0.2\n    cost_ratio: 0.2\n  retry:\n    max_attempts: 3      # Max retry attempts\n    timeout: "30s"       # Timeout per attempt\n    interval: "1s"       # Interval between retries\n  cache:\n    enabled: true        # Enable response caching\n    ttl_seconds: 10      # Cache TTL (10 seconds)\n')),(0,r.yg)("h2",{id:"configuration-sections"},"Configuration Sections"),(0,r.yg)("h3",{id:"server-configuration"},"Server Configuration"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Field"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"listen")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},":8080")),(0,r.yg)("td",{parentName:"tr",align:null},"Server listen address")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"admin_api_key")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"-"),(0,r.yg)("td",{parentName:"tr",align:null},"API key for admin endpoints")))),(0,r.yg)("h3",{id:"logging-configuration"},"Logging Configuration"),(0,r.yg)("h4",{id:"file-logging"},"File Logging"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Field"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"enabled")),(0,r.yg)("td",{parentName:"tr",align:null},"bool"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"true")),(0,r.yg)("td",{parentName:"tr",align:null},"Enable file logging")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"path")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"./logs/llm.log")),(0,r.yg)("td",{parentName:"tr",align:null},"Log file path")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"max_size_mb")),(0,r.yg)("td",{parentName:"tr",align:null},"int"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"100")),(0,r.yg)("td",{parentName:"tr",align:null},"Max file size in MB")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"max_backups")),(0,r.yg)("td",{parentName:"tr",align:null},"int"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"5")),(0,r.yg)("td",{parentName:"tr",align:null},"Max backup files")))),(0,r.yg)("h4",{id:"prometheus-logging"},"Prometheus Logging"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Field"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"enabled")),(0,r.yg)("td",{parentName:"tr",align:null},"bool"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"true")),(0,r.yg)("td",{parentName:"tr",align:null},"Enable Prometheus metrics")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"endpoint")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"/metrics")),(0,r.yg)("td",{parentName:"tr",align:null},"Metrics endpoint path")))),(0,r.yg)("h4",{id:"log-providers"},"Log Providers"),(0,r.yg)("p",null,"Array of log provider configurations:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Field"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"name")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"Provider name")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"type")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"Provider type (",(0,r.yg)("inlineCode",{parentName:"td"},"http"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"prometheus"),", etc.)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"endpoint")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"HTTP endpoint for webhooks")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"batch.enabled")),(0,r.yg)("td",{parentName:"tr",align:null},"bool"),(0,r.yg)("td",{parentName:"tr",align:null},"Enable batching")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"batch.size")),(0,r.yg)("td",{parentName:"tr",align:null},"int"),(0,r.yg)("td",{parentName:"tr",align:null},"Batch size")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"batch.interval_seconds")),(0,r.yg)("td",{parentName:"tr",align:null},"int"),(0,r.yg)("td",{parentName:"tr",align:null},"Batch interval")))),(0,r.yg)("h3",{id:"storage-configuration"},"Storage Configuration"),(0,r.yg)("h4",{id:"config-storage"},"Config Storage"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Field"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"type")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"file")),(0,r.yg)("td",{parentName:"tr",align:null},"Storage type (",(0,r.yg)("inlineCode",{parentName:"td"},"file"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"http"),")")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"path")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"./configs/config.yaml")),(0,r.yg)("td",{parentName:"tr",align:null},"File path (for file type)")))),(0,r.yg)("h4",{id:"runtime-storage"},"Runtime Storage"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Field"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"type")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"redis")),(0,r.yg)("td",{parentName:"tr",align:null},"Storage type (",(0,r.yg)("inlineCode",{parentName:"td"},"redis"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"file"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"http"),")")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"addr")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"localhost:6379")),(0,r.yg)("td",{parentName:"tr",align:null},"Redis address or HTTP endpoint")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"password")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"-"),(0,r.yg)("td",{parentName:"tr",align:null},"Redis password")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"api_key")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"-"),(0,r.yg)("td",{parentName:"tr",align:null},"API key for HTTP storage")))),(0,r.yg)("h3",{id:"llm-provider-configuration"},"LLM Provider Configuration"),(0,r.yg)("p",null,"Array of LLM provider configurations:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Field"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"id")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"Unique provider ID (used in model aliases)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"type")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"Provider type: ",(0,r.yg)("inlineCode",{parentName:"td"},"openai"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"gemini"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"claude"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"custom"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"api_keys")),(0,r.yg)("td",{parentName:"tr",align:null},"[]string"),(0,r.yg)("td",{parentName:"tr",align:null},"Array of API keys for this provider")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"base_url")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"Provider API base URL (optional, uses default if not set)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"model")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"Default model for this provider")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"pricing.input_token_cost")),(0,r.yg)("td",{parentName:"tr",align:null},"float64"),(0,r.yg)("td",{parentName:"tr",align:null},"Cost per 1K input tokens")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"pricing.output_token_cost")),(0,r.yg)("td",{parentName:"tr",align:null},"float64"),(0,r.yg)("td",{parentName:"tr",align:null},"Cost per 1K output tokens")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"limits.req_per_min")),(0,r.yg)("td",{parentName:"tr",align:null},"int"),(0,r.yg)("td",{parentName:"tr",align:null},"Request rate limit per key")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"limits.tokens_per_min")),(0,r.yg)("td",{parentName:"tr",align:null},"int"),(0,r.yg)("td",{parentName:"tr",align:null},"Token rate limit per key")))),(0,r.yg)("h3",{id:"api-key-permissions"},"API Key Permissions"),(0,r.yg)("p",null,"Array of client API key configurations:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Field"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"key")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"Client API key for authentication")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"allowed_providers")),(0,r.yg)("td",{parentName:"tr",align:null},"[]string"),(0,r.yg)("td",{parentName:"tr",align:null},"Array of allowed provider IDs or ",(0,r.yg)("inlineCode",{parentName:"td"},'["*"]')," for all")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"description")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},"Human-readable description")))),(0,r.yg)("h3",{id:"model-aliases"},"Model Aliases"),(0,r.yg)("p",null,"Map of alias names to provider:model combinations:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"model_aliases:\n  gpt-4o: openai-prod:gpt-4o\n  smart-model: gemini-prod:gemini-1.5-pro\n")),(0,r.yg)("h3",{id:"policy-configuration"},"Policy Configuration"),(0,r.yg)("p",null,"Load balancing and routing policy:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Field"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"strategy")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"hybrid")),(0,r.yg)("td",{parentName:"tr",align:null},"Legacy field, use ",(0,r.yg)("inlineCode",{parentName:"td"},"algorithm"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"algorithm")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"round_robin")),(0,r.yg)("td",{parentName:"tr",align:null},"Algorithm: ",(0,r.yg)("inlineCode",{parentName:"td"},"round_robin"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"least_loaded"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"hybrid"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"priority")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"balanced")),(0,r.yg)("td",{parentName:"tr",align:null},"Priority preset: ",(0,r.yg)("inlineCode",{parentName:"td"},"balanced"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"cost"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"req"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"token"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"hybrid_weights.*")),(0,r.yg)("td",{parentName:"tr",align:null},"float64"),(0,r.yg)("td",{parentName:"tr",align:null},"-"),(0,r.yg)("td",{parentName:"tr",align:null},"Manual weights for hybrid scoring (0.0-1.0)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"retry.max_attempts")),(0,r.yg)("td",{parentName:"tr",align:null},"int"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"3")),(0,r.yg)("td",{parentName:"tr",align:null},"Maximum retry attempts on failure")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"retry.timeout")),(0,r.yg)("td",{parentName:"tr",align:null},"duration"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"30s")),(0,r.yg)("td",{parentName:"tr",align:null},"Timeout per attempt")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"retry.interval")),(0,r.yg)("td",{parentName:"tr",align:null},"duration"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"1s")),(0,r.yg)("td",{parentName:"tr",align:null},"Delay between retries")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"cache.enabled")),(0,r.yg)("td",{parentName:"tr",align:null},"bool"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"true")),(0,r.yg)("td",{parentName:"tr",align:null},"Enable response caching")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"cache.ttl_seconds")),(0,r.yg)("td",{parentName:"tr",align:null},"int64"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"10")),(0,r.yg)("td",{parentName:"tr",align:null},"Cache TTL in seconds")))),(0,r.yg)("h3",{id:"model-aliases-1"},"Model Aliases"),(0,r.yg)("p",null,"Map of alias names to provider:model combinations:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"model_aliases:\n  gpt-4: openai:gpt-4\n  smart-model: gemini:gemini-1.5-pro\n")),(0,r.yg)("h3",{id:"policy-configuration-1"},"Policy Configuration"),(0,r.yg)("p",null,"Load balancing algorithm configuration:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Field"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"algorithm")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"round_robin")),(0,r.yg)("td",{parentName:"tr",align:null},"Algorithm: ",(0,r.yg)("inlineCode",{parentName:"td"},"round_robin"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"least_loaded"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"hybrid"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"priority")),(0,r.yg)("td",{parentName:"tr",align:null},"string"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"balanced")),(0,r.yg)("td",{parentName:"tr",align:null},"Priority: ",(0,r.yg)("inlineCode",{parentName:"td"},"balanced"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"cost"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"req"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"token")," (auto-sets weights)")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"hybrid_weights.*")),(0,r.yg)("td",{parentName:"tr",align:null},"float64"),(0,r.yg)("td",{parentName:"tr",align:null},"-"),(0,r.yg)("td",{parentName:"tr",align:null},"Manual weights for hybrid scoring")))),(0,r.yg)("h2",{id:"environment-variables"},"Environment Variables"),(0,r.yg)("p",null,"Configuration supports environment variable substitution:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'providers:\n  - keys:\n      - secret: "${OPENAI_API_KEY}"\n')),(0,r.yg)("p",null,"Set environment variables before running:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'export OPENAI_API_KEY="sk-your-key"\n./coo-llm -config config.yaml\n')),(0,r.yg)("h2",{id:"configuration-validation"},"Configuration Validation"),(0,r.yg)("p",null,"COO-LLM validates configuration on startup:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Required fields presence"),(0,r.yg)("li",{parentName:"ul"},"URL format validation"),(0,r.yg)("li",{parentName:"ul"},"Numeric range checks"),(0,r.yg)("li",{parentName:"ul"},"Provider and key uniqueness")),(0,r.yg)("p",null,"Invalid configurations will prevent startup with detailed error messages."),(0,r.yg)("h2",{id:"hot-reload"},"Hot Reload"),(0,r.yg)("p",null,"Configuration can be reloaded without restarting:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'curl -X POST http://localhost:8080/admin/v1/reload \\\n  -H "Authorization: Bearer your-admin-key"\n')),(0,r.yg)("h2",{id:"example-configurations"},"Example Configurations"),(0,r.yg)("h3",{id:"minimal-configuration"},"Minimal Configuration"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'version: "1.0"\nserver:\n  listen: ":8080"\n\nllm_providers:\n  - id: "openai"\n    type: "openai"\n    api_keys: ["sk-your-key"]\n    model: "gpt-4o"\n\nmodel_aliases:\n  gpt-4o: openai:gpt-4o\n')),(0,r.yg)("h3",{id:"production-configuration"},"Production Configuration"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'version: "1.0"\nserver:\n  listen: ":8080"\n  admin_api_key: "${ADMIN_KEY}"\n\nlogging:\n  file:\n    enabled: true\n    path: "/var/log/coo-llm/llm.log"\n  prometheus:\n    enabled: true\n\nstorage:\n  runtime:\n    type: "redis"\n    addr: "redis:6379"\n    password: "${REDIS_PASSWORD}"\n\nllm_providers:\n  - id: "openai-prod"\n    type: "openai"\n    api_keys: ["${OPENAI_KEY_1}", "${OPENAI_KEY_2}"]\n    base_url: "https://api.openai.com"\n    model: "gpt-4o"\n    pricing:\n      input_token_cost: 0.002\n      output_token_cost: 0.01\n    limits:\n      req_per_min: 200\n      tokens_per_min: 100000\n  - id: "gemini-prod"\n    type: "gemini"\n    api_keys: ["${GEMINI_KEY_1}"]\n    base_url: "https://generativelanguage.googleapis.com"\n    model: "gemini-1.5-pro"\n    pricing:\n      input_token_cost: 0.00025\n      output_token_cost: 0.0005\n    limits:\n      req_per_min: 150\n      tokens_per_min: 80000\n\napi_keys:\n  - key: "client-a-key"\n    allowed_providers: ["openai-prod"]\n    description: "Client A - OpenAI only"\n  - key: "premium-key"\n    allowed_providers: ["openai-prod", "gemini-prod"]\n    description: "Premium client with all providers"\n\nmodel_aliases:\n  gpt-4o: openai-prod:gpt-4o\n  gemini-pro: gemini-prod:gemini-1.5-pro\n\npolicy:\n  algorithm: "hybrid"\n  priority: "balanced"\n  retry:\n    max_attempts: 3\n    timeout: "30s"\n  cache:\n    enabled: true\n    ttl_seconds: 10\n')),(0,r.yg)("h2",{id:"configuration-api"},"Configuration API"),(0,r.yg)("p",null,"Manage configuration via REST API:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'# Get current config\ncurl http://localhost:8080/admin/v1/config\n\n# Update config\ncurl -X POST http://localhost:8080/admin/v1/config \\\n  -H "Content-Type: application/json" \\\n  -d @new-config.json\n\n# Validate config\ncurl -X POST http://localhost:8080/admin/v1/config/validate \\\n  -H "Content-Type: application/json" \\\n  -d @config.json\n')))}m.isMDXComponent=!0}}]);