"use strict";(globalThis.webpackChunkcoo_llm_docs=globalThis.webpackChunkcoo_llm_docs||[]).push([[8059],{276:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>a,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Reference/Logging/Request-Logging","title":"Request Logging","description":"COO-LLM provides comprehensive request logging with structured JSON output for monitoring and debugging.","source":"@site/content/Reference/Logging/Request-Logging.md","sourceDirName":"Reference/Logging","slug":"/Reference/Logging/Request-Logging","permalink":"/docs/docs/Reference/Logging/Request-Logging","draft":false,"unlisted":false,"editUrl":"https://github.com/coo-llm/coo-llm-main/tree/main/docs/content/content/Reference/Logging/Request-Logging.md","tags":[{"inline":true,"label":"reference","permalink":"/docs/docs/tags/reference"},{"inline":true,"label":"logging","permalink":"/docs/docs/tags/logging"},{"inline":true,"label":"requests","permalink":"/docs/docs/tags/requests"}],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"tags":["reference","logging","requests"]},"sidebar":"tutorialSidebar","previous":{"title":"Logging","permalink":"/docs/docs/Reference/Logging"},"next":{"title":"Usage Logging","permalink":"/docs/docs/Reference/Logging/Usage-Logging"}}');var r=i(4848),l=i(8453);const o={sidebar_position:1,tags:["reference","logging","requests"]},t="Request Logging",d={},c=[{value:"Log Structure",id:"log-structure",level:2},{value:"Field Descriptions",id:"field-descriptions",level:2},{value:"Core Fields",id:"core-fields",level:3},{value:"Entry Fields",id:"entry-fields",level:3},{value:"Log Levels",id:"log-levels",level:2},{value:"INFO Level",id:"info-level",level:3},{value:"ERROR Level",id:"error-level",level:3},{value:"DEBUG Level",id:"debug-level",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Log Analysis",id:"log-analysis",level:2},{value:"Common Patterns",id:"common-patterns",level:3},{value:"Monitoring Queries",id:"monitoring-queries",level:3}];function g(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"request-logging",children:"Request Logging"})}),"\n",(0,r.jsx)(n.p,{children:"COO-LLM provides comprehensive request logging with structured JSON output for monitoring and debugging."}),"\n",(0,r.jsx)(n.h2,{id:"log-structure",children:"Log Structure"}),"\n",(0,r.jsx)(n.p,{children:"Request logs use consistent JSON format with detailed information:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "level": "info",\n  "entry": {\n    "timestamp": "2025-10-18T10:10:37+07:00",\n    "provider": "gemini-prod",\n    "model": "gemini-prod:gemini-2.0-flash",\n    "req_id": "1760757037738488000",\n    "latency_ms": 460,\n    "status": 500,\n    "tokens": 0,\n    "cost": 0,\n    "error": "Gemini API error after 3 attempts: googleapi: Error 400: API key not valid..."\n  },\n  "time": "2025-10-18T10:10:37+07:00",\n  "message": "request"\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"field-descriptions",children:"Field Descriptions"}),"\n",(0,r.jsx)(n.h3,{id:"core-fields",children:"Core Fields"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"level"}),": Log level (",(0,r.jsx)(n.code,{children:"info"}),", ",(0,r.jsx)(n.code,{children:"debug"}),", ",(0,r.jsx)(n.code,{children:"error"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"time"}),": ISO 8601 timestamp when log was written"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"message"}),": Log message type (",(0,r.jsx)(n.code,{children:"request"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"entry-fields",children:"Entry Fields"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"timestamp"}),": Request start time"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"provider"}),": LLM provider ID (e.g., ",(0,r.jsx)(n.code,{children:"openai"}),", ",(0,r.jsx)(n.code,{children:"gemini-prod"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"model"}),": Full model name including provider prefix"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"req_id"}),": Unique request identifier (Unix nanoseconds)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"latency_ms"}),": Total request duration in milliseconds"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"status"}),": HTTP response status code"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"tokens"}),": Token usage (input + output tokens)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"cost"}),": Estimated cost for the request"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"error"}),": Error message (if request failed)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"log-levels",children:"Log Levels"}),"\n",(0,r.jsx)(n.h3,{id:"info-level",children:"INFO Level"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Successful requests"}),"\n",(0,r.jsx)(n.li,{children:"Normal API operations"}),"\n",(0,r.jsx)(n.li,{children:"Usage tracking"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"error-level",children:"ERROR Level"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Failed requests"}),"\n",(0,r.jsx)(n.li,{children:"Provider errors"}),"\n",(0,r.jsx)(n.li,{children:"Authentication failures"}),"\n",(0,r.jsx)(n.li,{children:"Rate limiting"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"debug-level",children:"DEBUG Level"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Detailed operation logs"}),"\n",(0,r.jsx)(n.li,{children:"Store operations"}),"\n",(0,r.jsx)(n.li,{children:"Internal metrics"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'logging:\n  file:\n    enabled: true\n    path: "./logs/llm.log"\n    max_size_mb: 100\n    max_backups: 5\n  level: "info"  # "debug", "info", "warn", "error"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"log-analysis",children:"Log Analysis"}),"\n",(0,r.jsx)(n.h3,{id:"common-patterns",children:"Common Patterns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Successful Request:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "level": "info",\n  "entry": {\n    "provider": "openai",\n    "model": "openai:gpt-4o",\n    "latency_ms": 1250,\n    "status": 200,\n    "tokens": 150,\n    "cost": 0.00225\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Failed Request:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "level": "info", \n  "entry": {\n    "provider": "gemini-prod",\n    "status": 500,\n    "error": "API key not valid"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"monitoring-queries",children:"Monitoring Queries"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Count errors by provider\ngrep '\"level\":\"info\"' logs/llm.log | grep '\"status\":500' | jq -r '.entry.provider' | sort | uniq -c\n\n# Average latency\ngrep '\"level\":\"info\"' logs/llm.log | jq '.entry.latency_ms' | awk '{sum+=$1; count++} END {print sum/count}'\n\n# Total cost per day\ngrep '\"level\":\"info\"' logs/llm.log | jq '.entry.cost' | paste -sd+ | bc\n"})})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>t});var s=i(6540);const r={},l=s.createContext(r);function o(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);