"use strict";(globalThis.webpackChunkcoo_llm_docs=globalThis.webpackChunkcoo_llm_docs||[]).push([[8361],{6494:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Reference/Storage","title":"Storage","description":"COO-LLM uses pluggable storage backends for runtime metrics and caching. The system supports Redis, HTTP API, SQL databases (SQLite/PostgreSQL), MongoDB, DynamoDB, and InfluxDB storage.","source":"@site/content/Reference/Storage.md","sourceDirName":"Reference","slug":"/Reference/Storage","permalink":"/docs/docs/Reference/Storage","draft":false,"unlisted":false,"editUrl":"https://github.com/coo-llm/coo-llm-main/tree/main/docs/content/content/Reference/Storage.md","tags":[{"inline":true,"label":"developer-guide","permalink":"/docs/docs/tags/developer-guide"},{"inline":true,"label":"storage","permalink":"/docs/docs/tags/storage"}],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"tags":["developer-guide","storage"]},"sidebar":"tutorialSidebar","previous":{"title":"Load Balancer","permalink":"/docs/docs/Reference/Balancer"},"next":{"title":"Redis Storage","permalink":"/docs/docs/Reference/Storage/Redis"}}');var s=i(4848),t=i(8453);const l={sidebar_position:4,tags:["developer-guide","storage"]},o="Storage",a={},d=[{value:"Storage Interfaces",id:"storage-interfaces",level:2},{value:"RuntimeStore",id:"runtimestore",level:3},{value:"ConfigStore",id:"configstore",level:3},{value:"ClientStore",id:"clientstore",level:3},{value:"MetricsStore",id:"metricsstore",level:3},{value:"AlgorithmStore",id:"algorithmstore",level:3},{value:"StoreProvider",id:"storeprovider",level:3},{value:"Configuration Storage",id:"configuration-storage",level:2},{value:"Supported Backends",id:"supported-backends",level:2},{value:"MongoDB Storage",id:"mongodb-storage",level:3},{value:"DynamoDB Storage (AWS)",id:"dynamodb-storage-aws",level:3},{value:"InfluxDB Storage (Time-Series)",id:"influxdb-storage-time-series",level:3},{value:"Redis Storage (Production)",id:"redis-storage-production",level:3},{value:"HTTP API Storage",id:"http-api-storage",level:3},{value:"File Storage",id:"file-storage",level:3},{value:"In-Memory Storage",id:"in-memory-storage",level:3},{value:"Usage Metrics",id:"usage-metrics",level:2},{value:"Caching",id:"caching",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Runtime Storage",id:"runtime-storage",level:3},{value:"Cache Configuration",id:"cache-configuration",level:3},{value:"Logging and Monitoring",id:"logging-and-monitoring",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Redis Backend",id:"redis-backend",level:3},{value:"HTTP Backend",id:"http-backend",level:3},{value:"File Backend",id:"file-backend",level:3},{value:"SQL Backend",id:"sql-backend",level:3},{value:"MongoDB Backend",id:"mongodb-backend",level:3},{value:"DynamoDB Backend",id:"dynamodb-backend",level:3},{value:"Metrics Usage",id:"metrics-usage",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Production Setup",id:"production-setup",level:3},{value:"Development Setup",id:"development-setup",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debug Commands",id:"debug-commands",level:3}];function c(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"storage",children:"Storage"})}),"\n",(0,s.jsx)(n.p,{children:"COO-LLM uses pluggable storage backends for runtime metrics and caching. The system supports Redis, HTTP API, SQL databases (SQLite/PostgreSQL), MongoDB, DynamoDB, and InfluxDB storage."}),"\n",(0,s.jsx)(n.h2,{id:"storage-interfaces",children:"Storage Interfaces"}),"\n",(0,s.jsx)(n.p,{children:"COO-LLM uses multiple storage interfaces for different purposes:"}),"\n",(0,s.jsx)(n.h3,{id:"runtimestore",children:"RuntimeStore"}),"\n",(0,s.jsx)(n.p,{children:"For metrics, caching, and usage tracking:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type RuntimeStore interface {\n    GetUsage(provider, keyID, metric string) (float64, error)\n    SetUsage(provider, keyID, metric string, value float64) error\n    IncrementUsage(provider, keyID, metric string, delta float64) error\n    GetUsageInWindow(provider, keyID, metric string, windowSeconds int64) (float64, error)\n    SetCache(key, value string, ttlSeconds int64) error\n    GetCache(key string) (string, error)\n    StoreMetric(name string, value float64, tags map[string]string, timestamp int64) error\n    GetMetrics(name string, tags map[string]string, start, end int64) ([]MetricPoint, error)\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"configstore",children:"ConfigStore"}),"\n",(0,s.jsx)(n.p,{children:"For configuration management and persistence:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type ConfigStore interface {\n    LoadConfig() (*config.Config, error)\n    SaveConfig(cfg *config.Config) error\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Stores public configuration for instance synchronization"}),"\n",(0,s.jsx)(n.li,{children:"Masks sensitive data (API keys, secrets)"}),"\n",(0,s.jsx)(n.li,{children:"Supports dynamic config updates via admin API"}),"\n",(0,s.jsx)(n.li,{children:"Fallback to in-memory if store unavailable"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"clientstore",children:"ClientStore"}),"\n",(0,s.jsx)(n.p,{children:"For client API key management and validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type ClientStore interface {\n    CreateClient(clientID, apiKey, description string, allowedProviders []string) error\n    UpdateClient(clientID, description string, allowedProviders []string) error\n    DeleteClient(clientID string) error\n    GetClient(clientID string) (*ClientInfo, error)\n    ListClients() ([]*ClientInfo, error)\n    ValidateClient(apiKey string) (*ClientInfo, error)\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"metricsstore",children:"MetricsStore"}),"\n",(0,s.jsx)(n.p,{children:"For advanced metrics queries and time-series data:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type MetricsStore interface {\n    GetClientMetrics(clientID string, start, end int64) (*ClientMetrics, error)\n    GetProviderMetrics(providerID string, start, end int64) (*ProviderMetrics, error)\n    GetKeyMetrics(providerID, keyID string, start, end int64) (*KeyMetrics, error)\n    GetGlobalMetrics(start, end int64) (*GlobalMetrics, error)\n    GetClientTimeSeries(clientID string, start, end int64, interval string) ([]TimeSeriesPoint, error)\n    GetProviderTimeSeries(providerID string, start, end int64, interval string) ([]TimeSeriesPoint, error)\n    GetKeyTimeSeries(providerID, keyID string, start, end int64, interval string) ([]TimeSeriesPoint, error)\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"algorithmstore",children:"AlgorithmStore"}),"\n",(0,s.jsx)(n.p,{children:"For storing algorithm configurations:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type AlgorithmStore interface {\n    SaveAlgorithmConfig(algorithm string, config map[string]interface{}) error\n    LoadAlgorithmConfig(algorithm string) (map[string]interface{}, error)\n    ListAlgorithms() ([]string, error)\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"storeprovider",children:"StoreProvider"}),"\n",(0,s.jsx)(n.p,{children:"Unified interface combining all storage capabilities:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type StoreProvider interface {\n    RuntimeStore\n    ConfigStore\n    ClientStore\n    MetricsStore\n    AlgorithmStore\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuration-storage",children:"Configuration Storage"}),"\n",(0,s.jsx)(n.p,{children:"Public configuration is stored separately from runtime data:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Startup"}),": Loads base config from YAML, saves masked public config to store"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Updates"}),": Admin API updates config in store, synced across instances"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Security"}),": API keys stored as ",(0,s.jsx)(n.code,{children:"${ENV_VAR}"}),", resolved at runtime, never persisted"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"supported-backends",children:"Supported Backends"}),"\n",(0,s.jsx)(n.p,{children:"See individual backend documentation:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Redis - High-performance in-memory storage"}),"\n",(0,s.jsx)(n.li,{children:"MongoDB - Document-based NoSQL database"}),"\n",(0,s.jsx)(n.li,{children:"DynamoDB - AWS serverless NoSQL database"}),"\n",(0,s.jsx)(n.li,{children:"InfluxDB - Time-series database for metrics"}),"\n",(0,s.jsx)(n.li,{children:"HTTP API - REST API-based storage"}),"\n",(0,s.jsx)(n.li,{children:"File-based - Simple JSON file storage"}),"\n",(0,s.jsx)(n.li,{children:"In-Memory - Volatile storage for development"}),"\n",(0,s.jsx)(n.li,{children:"SQL Database - Full-featured SQL database storage"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'storage:\n  runtime:\n    type: "sql"\n    addr: "./data/coo-llm.db"  # SQLite (default)\n    # addr: "postgresql://user:password@localhost/dbname?sslmode=disable"  # PostgreSQL\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Full SQL database support with SQLite (default) and PostgreSQL"}),"\n",(0,s.jsx)(n.li,{children:"Persistent storage with ACID transactions"}),"\n",(0,s.jsx)(n.li,{children:"Advanced querying capabilities"}),"\n",(0,s.jsx)(n.li,{children:"Time-window analytics support"}),"\n",(0,s.jsx)(n.li,{children:"Automatic table creation and indexing"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Data Structure:"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"SQLite:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Usage metrics table\nCREATE TABLE usage_metrics (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    provider TEXT NOT NULL,\n    key_id TEXT NOT NULL,\n    metric TEXT NOT NULL,\n    value REAL NOT NULL,\n    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\n    UNIQUE(provider, key_id, metric)\n);\n\n-- Usage history table for time-window queries\nCREATE TABLE usage_history (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    provider TEXT NOT NULL,\n    key_id TEXT NOT NULL,\n    metric TEXT NOT NULL,\n    delta REAL NOT NULL,\n    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Cache table\nCREATE TABLE cache (\n    key TEXT PRIMARY KEY,\n    value TEXT NOT NULL,\n    expiry DATETIME\n);\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"PostgreSQL:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- Usage metrics table\nCREATE TABLE usage_metrics (\n    id SERIAL PRIMARY KEY,\n    provider VARCHAR(50) NOT NULL,\n    key_id VARCHAR(100) NOT NULL,\n    metric VARCHAR(50) NOT NULL,\n    value DOUBLE PRECISION NOT NULL,\n    timestamp TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    UNIQUE(provider, key_id, metric)\n);\n\n-- Usage history table for time-window queries\nCREATE TABLE usage_history (\n    id SERIAL PRIMARY KEY,\n    provider VARCHAR(50) NOT NULL,\n    key_id VARCHAR(100) NOT NULL,\n    metric VARCHAR(50) NOT NULL,\n    delta DOUBLE PRECISION NOT NULL,\n    timestamp TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\n-- Cache table\nCREATE TABLE cache (\n    key VARCHAR(255) PRIMARY KEY,\n    value TEXT NOT NULL,\n    expiry TIMESTAMP WITH TIME ZONE\n);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"mongodb-storage",children:"MongoDB Storage"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'storage:\n  runtime:\n    type: "mongodb"\n    addr: "mongodb://localhost:27017"\n    database: "coo_llm"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"NoSQL document database support"}),"\n",(0,s.jsx)(n.li,{children:"Flexible schema design"}),"\n",(0,s.jsx)(n.li,{children:"High performance for read/write operations"}),"\n",(0,s.jsx)(n.li,{children:"Aggregation pipeline for analytics"}),"\n",(0,s.jsx)(n.li,{children:"Automatic index creation"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Data Structure:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Usage metrics collection\n{\n    "_id": ObjectId,\n    "provider": "openai",\n    "key_id": "key1",\n    "metric": "req",\n    "value": 45.0\n}\n\n// Usage history collection\n{\n    "_id": ObjectId,\n    "provider": "openai",\n    "key_id": "key1",\n    "metric": "req",\n    "delta": 1.0,\n    "timestamp": ISODate("2024-01-01T00:00:00Z")\n}\n\n// Cache collection\n{\n    "_id": "cache_key",\n    "value": "cached_response",\n    "expiry": ISODate("2024-01-01T00:00:10Z")\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"dynamodb-storage-aws",children:"DynamoDB Storage (AWS)"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'storage:\n  runtime:\n    type: "dynamodb"\n    addr: "us-east-1"  # AWS region\n    table_usage: "coo_llm_usage"\n    table_cache: "coo_llm_cache"\n    table_history: "coo_llm_history"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"AWS managed NoSQL database"}),"\n",(0,s.jsx)(n.li,{children:"Auto-scaling and high availability"}),"\n",(0,s.jsx)(n.li,{children:"Pay-per-request pricing"}),"\n",(0,s.jsx)(n.li,{children:"Global tables for multi-region"}),"\n",(0,s.jsx)(n.li,{children:"Time-window queries with history table"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Data Structure:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Usage Table:\nPK: USAGE#{provider}#{key_id}\nSK: {metric}\nAttributes: value (Number)\n\nHistory Table:\nPK: HISTORY#{provider}#{key_id}#{metric}\nSK: {timestamp}\nAttributes: delta (Number), timestamp (Number)\n\nCache Table:\nPK: CACHE#{key}\nSK: DATA\nAttributes: value (String), expiry (Number)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"influxdb-storage-time-series",children:"InfluxDB Storage (Time-Series)"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'storage:\n  runtime:\n    type: "influxdb"\n    addr: "http://localhost:8086"\n    password: "${INFLUX_TOKEN}"\n    api_key: "${INFLUX_ORG}"\n    database: "${INFLUX_BUCKET}"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Time-series database optimized for metrics"}),"\n",(0,s.jsx)(n.li,{children:"High-performance time-window queries"}),"\n",(0,s.jsx)(n.li,{children:"Automatic data retention policies"}),"\n",(0,s.jsx)(n.li,{children:"Real-time analytics and alerting"}),"\n",(0,s.jsx)(n.li,{children:"Horizontal scaling capabilities"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Data Structure:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Measurement: usage\nTags: provider, keyID, metric\nFields: value (float)\nTime: timestamp\n\nMeasurement: usage_history\nTags: provider, keyID, metric\nFields: delta (float)\nTime: timestamp\n\nMeasurement: cache\nTags: key\nFields: value (string), expiry (timestamp)\nTime: timestamp\n"})}),"\n",(0,s.jsx)(n.h3,{id:"redis-storage-production",children:"Redis Storage (Production)"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'storage:\n  runtime:\n    type: "redis"\n    addr: "localhost:6379"\n    password: "${REDIS_PASSWORD}"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Persistent storage for metrics"}),"\n",(0,s.jsx)(n.li,{children:"High performance with connection pooling"}),"\n",(0,s.jsx)(n.li,{children:"TTL support for automatic cleanup"}),"\n",(0,s.jsx)(n.li,{children:"Used for production deployments"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Data Structure:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Key: usage:{provider}:{key_id}:{metric}\nValue: float64\nTTL: 60 seconds\n\nExamples:\nusage:openai:key1:req \u2192 45.0\nusage:openai:key1:tokens \u2192 1200.0\nusage:openai:key1:errors \u2192 2.0\n"})}),"\n",(0,s.jsx)(n.h3,{id:"http-api-storage",children:"HTTP API Storage"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'storage:\n  runtime:\n    type: "http"\n    addr: "https://api.example.com/storage"\n    api_key: "${STORAGE_API_KEY}"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Remote storage via HTTP API"}),"\n",(0,s.jsx)(n.li,{children:"Useful for centralized metrics storage"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"file-storage",children:"File Storage"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'storage:\n  runtime:\n    type: "file"\n    addr: "./storage/data.json"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Simple file-based storage"}),"\n",(0,s.jsx)(n.li,{children:"Not recommended for production"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"in-memory-storage",children:"In-Memory Storage"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configuration:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'storage:\n  runtime:\n    type: "memory"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Volatile in-memory storage"}),"\n",(0,s.jsx)(n.li,{children:"Useful for development and testing"}),"\n",(0,s.jsx)(n.li,{children:"Does not persist data across restarts"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"usage-metrics",children:"Usage Metrics"}),"\n",(0,s.jsx)(n.p,{children:"The system tracks the following metrics per provider/key combination:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"req"}),": Number of requests"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"input_tokens"}),": Input tokens used"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"output_tokens"}),": Output tokens generated"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"tokens"}),": Total tokens used"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"errors"}),": Number of failed requests"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"latency"}),": Average response latency in milliseconds"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"caching",children:"Caching"}),"\n",(0,s.jsx)(n.p,{children:"Response caching is supported when enabled:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"policy:\n  cache:\n    enabled: true\n    ttl_seconds: 10\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Cache Keys:"})," Normalized text prompts\n",(0,s.jsx)(n.strong,{children:"Storage:"})," Same backend as runtime metrics\n",(0,s.jsx)(n.strong,{children:"TTL:"})," Configurable expiration time"]}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.h3,{id:"runtime-storage",children:"Runtime Storage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'storage:\n  runtime:\n    type: "redis"  # redis, http, sql, mongodb, dynamodb, influxdb\n    addr: "localhost:6379"  # Connection string or endpoint\n    password: ""            # Redis password\n    api_key: ""             # HTTP API key\n    database: "coo_llm"     # Database name for MongoDB\n    table_usage: "coo_llm_usage"     # DynamoDB table names\n    table_cache: "coo_llm_cache"\n    table_history: "coo_llm_history"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"cache-configuration",children:"Cache Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"policy:\n  cache:\n    enabled: true\n    ttl_seconds: 10\n"})}),"\n",(0,s.jsx)(n.h2,{id:"logging-and-monitoring",children:"Logging and Monitoring"}),"\n",(0,s.jsx)(n.p,{children:"All storage backends include comprehensive logging for database operations:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Debug logs"}),": All Get/Set/Increment operations with parameters and results"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Error logs"}),": Failed operations with error details"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance monitoring"}),": Operation timing and success rates"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Log Levels:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DEBUG"}),": Successful operations with context"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ERROR"}),": Failed operations with error messages"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"INFO"}),": Connection status and initialization"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example logs:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'DEBUG store operation operation=GetUsage provider=openai keyID=key1 metric=req value=45\nDEBUG store operation operation=IncrementUsage provider=openai keyID=key1 metric=tokens delta=150\nERROR store operation failed operation=SetUsage provider=openai keyID=key1 metric=req error="connection timeout"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,s.jsx)(n.h3,{id:"redis-backend",children:"Redis Backend"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"File:"})," ",(0,s.jsx)(n.code,{children:"internal/store/redis.go"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Uses go-redis client"}),"\n",(0,s.jsx)(n.li,{children:"Automatic TTL management"}),"\n",(0,s.jsx)(n.li,{children:"Atomic increment operations"}),"\n",(0,s.jsx)(n.li,{children:"Connection pooling"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"http-backend",children:"HTTP Backend"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"File:"})," ",(0,s.jsx)(n.code,{children:"internal/store/http.go"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"REST API integration"}),"\n",(0,s.jsx)(n.li,{children:"Bearer token authentication"}),"\n",(0,s.jsx)(n.li,{children:"JSON request/response format"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"file-backend",children:"File Backend"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"File:"})," ",(0,s.jsx)(n.code,{children:"internal/store/file.go"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"JSON file storage"}),"\n",(0,s.jsx)(n.li,{children:"Simple persistence"}),"\n",(0,s.jsx)(n.li,{children:"Not concurrent-safe"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"sql-backend",children:"SQL Backend"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"File:"})," ",(0,s.jsx)(n.code,{children:"internal/store/sql.go"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["PostgreSQL driver with ",(0,s.jsx)(n.code,{children:"lib/pq"})]}),"\n",(0,s.jsx)(n.li,{children:"Automatic schema migration"}),"\n",(0,s.jsx)(n.li,{children:"Transaction support for consistency"}),"\n",(0,s.jsx)(n.li,{children:"Indexed queries for performance"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"mongodb-backend",children:"MongoDB Backend"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"File:"})," ",(0,s.jsx)(n.code,{children:"internal/store/mongodb.go"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Official MongoDB Go driver"}),"\n",(0,s.jsx)(n.li,{children:"Connection pooling and monitoring"}),"\n",(0,s.jsx)(n.li,{children:"Aggregation framework for analytics"}),"\n",(0,s.jsx)(n.li,{children:"Automatic index management"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"dynamodb-backend",children:"DynamoDB Backend"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"File:"})," ",(0,s.jsx)(n.code,{children:"internal/store/dynamodb.go"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Features:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"AWS SDK v2 for DynamoDB"}),"\n",(0,s.jsx)(n.li,{children:"Multi-table architecture for efficiency"}),"\n",(0,s.jsx)(n.li,{children:"Conditional updates and atomic operations"}),"\n",(0,s.jsx)(n.li,{children:"Time-window queries via history table"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"metrics-usage",children:"Metrics Usage"}),"\n",(0,s.jsx)(n.p,{children:"Metrics are used for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rate Limiting:"})," Check req/min and tokens/min limits"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Load Balancing:"})," Select least-loaded keys"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Monitoring:"})," Track performance and errors"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Caching:"})," Response deduplication"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"production-setup",children:"Production Setup"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Redis:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use Redis for production deployments"}),"\n",(0,s.jsx)(n.li,{children:"Set appropriate TTL values (default 60s)"}),"\n",(0,s.jsx)(n.li,{children:"Monitor Redis memory usage"}),"\n",(0,s.jsx)(n.li,{children:"Implement Redis persistence (RDB/AOF)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"SQL Databases:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use PostgreSQL for relational workloads"}),"\n",(0,s.jsx)(n.li,{children:"Enable connection pooling"}),"\n",(0,s.jsx)(n.li,{children:"Monitor query performance and indexes"}),"\n",(0,s.jsx)(n.li,{children:"Regular VACUUM for maintenance"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"MongoDB:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use MongoDB for high-throughput scenarios"}),"\n",(0,s.jsx)(n.li,{children:"Configure replica sets for HA"}),"\n",(0,s.jsx)(n.li,{children:"Monitor oplog and disk usage"}),"\n",(0,s.jsx)(n.li,{children:"Use appropriate read preferences"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"DynamoDB:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use DynamoDB for AWS-native deployments"}),"\n",(0,s.jsx)(n.li,{children:"Monitor read/write capacity and costs"}),"\n",(0,s.jsx)(n.li,{children:"Design partition keys for even distribution"}),"\n",(0,s.jsx)(n.li,{children:"Use DynamoDB Streams for cross-region replication"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"development-setup",children:"Development Setup"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use SQL storage (SQLite) for quick testing"}),"\n",(0,s.jsx)(n.li,{children:"Switch to Redis when testing load balancing"}),"\n",(0,s.jsx)(n.li,{children:"Check logs for storage errors"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Database Connection Failed:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Redis\nredis-cli -h localhost -p 6379 ping\n\n# PostgreSQL\npsql -h localhost -U user -d dbname -c "SELECT 1"\n\n# MongoDB\nmongosh --eval "db.runCommand({ping: 1})"\n\n# DynamoDB (via AWS CLI)\naws dynamodb list-tables --region us-east-1\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Metrics not updating:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Verify storage backend configuration"}),"\n",(0,s.jsx)(n.li,{children:"Check for storage errors in logs"}),"\n",(0,s.jsx)(n.li,{children:"Ensure proper permissions and credentials"}),"\n",(0,s.jsx)(n.li,{children:"Validate connection strings"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"High memory/disk usage:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Monitor database metrics"}),"\n",(0,s.jsx)(n.li,{children:"Adjust TTL values if needed"}),"\n",(0,s.jsx)(n.li,{children:"Implement data cleanup policies"}),"\n",(0,s.jsx)(n.li,{children:"Check for memory leaks in application"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Slow queries:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Add appropriate indexes"}),"\n",(0,s.jsx)(n.li,{children:"Monitor query execution plans"}),"\n",(0,s.jsx)(n.li,{children:"Consider data partitioning"}),"\n",(0,s.jsx)(n.li,{children:"Use connection pooling"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"debug-commands",children:"Debug Commands"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Redis:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# View all usage keys\nredis-cli keys "usage:*"\n\n# Get specific metric\nredis-cli get "usage:openai:key1:req"\n\n# Check TTL\nredis-cli ttl "usage:openai:key1:req"\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"PostgreSQL:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"-- View usage metrics\nSELECT * FROM usage_metrics WHERE provider = 'openai';\n\n-- Check recent history\nSELECT * FROM usage_history\nWHERE timestamp > NOW() - INTERVAL '1 hour'\nORDER BY timestamp DESC;\n\n-- Monitor table sizes\nSELECT schemaname, tablename, pg_size_pretty(pg_total_relation_size(schemaname||'.'||tablename)) as size\nFROM pg_tables WHERE tablename LIKE 'usage%';\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"MongoDB:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// View usage metrics\ndb.usage_metrics.find({provider: "openai"})\n\n// Check recent history\ndb.usage_history.find({\n  timestamp: {$gt: new Date(Date.now() - 3600000)}\n}).sort({timestamp: -1})\n\n// Monitor collection stats\ndb.usage_metrics.stats()\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"DynamoDB:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# List tables\naws dynamodb list-tables --region us-east-1\n\n# Scan usage table\naws dynamodb scan --table-name coo_llm_usage --region us-east-1\n\n# Query history\naws dynamodb query \\\n  --table-name coo_llm_history \\\n  --key-condition-expression "pk = :pk" \\\n  --expression-attribute-values \'{":pk":{"S":"HISTORY#openai#key1#req"}}\' \\\n  --region us-east-1\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var r=i(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);